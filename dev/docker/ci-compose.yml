version: '3.1'

services:

  wordpress:
    container_name: ci_wordpress
    # We use the vanilla WordPress container in its Apache declination to
    # avoid having to deal with any web-server issue.
    # See https://hub.docker.com/_/wordpress/ for more information.
    image: wordpress
    depends_on:
      - db
    ports:
      # Let's expose the container on port 8080 of localhost to avoid conflicts
      # with other web-servers that might be listening on port 80 (HTTP default).
      # The WordPress installation will be reachable at http://localhost:8080.
      - 8080:80
    volumes:
      # Bind the host WordPress installation into the folder that, in the container,
      # will be used to serve WordPress.
      # If not provided the container would download, configure and install WordPress.
      # To avoid this the WordPress installation we bind in the container should be completely
      # configured and ready to go.
      # See .travis.yml for more information.
      - ${WP_ROOT_FOLDER:-/tmp/wordpress}:/var/www/html
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: ${WP_DB_NAME:-wordpress}

  db:
    container_name: ci_db
    image: mariadb
    ports:
      # Let's expose the database container on port 4306 of localhost to
      # avoid conflicts with other MySQL servers that might be listening on
      # 3306 (default MySQL server port).
      - ${WP_DB_PORT:-4306}:3306
    environment:
      # This tells the db container to create a database during initialization.
      # The db will create a user with admin rights on the database too.
      MYSQL_DATABASE: ${WP_DB_NAME:-wordpress}
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      # To avoid having to enter a password in CLI scripts let's not protect the root user
      # with a password at all; in this context it's not an issue.
      MYSQL_ALLOW_EMPTY_PASSWORD: 1

  chromedriver:
    container_name: ci_chromedriver
    image: selenium/standalone-chrome:3.141.59-oxygen
    depends_on:
      - db
      - wordpress
    links:
      - wordpress
    extra_hosts:
      # This line makes it so that the `/etc/hosts` file of this container will contain an entry
      # redirecting requests for the WP_CHROMEDRIVER_URL to the IP address of the `wordpress` container.
      # That IP address is obtained in the CI configuration file.
      # See both the `.travis.yml` file and the `dev/docker/wp-config.template` file for more information.
      - "${WP_CHROMEDRIVER_URL}:${WP_CONTAINER_IP:-127.0.0.1}"
    ports:
      # Expose Selenium on the default port.
      - "${CHROMEDRIVER_PORT:-4444}:4444"
