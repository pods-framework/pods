{"version":3,"sources":["backbone.radio.js"],"names":[],"mappings":"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","file":"backbone.radio.js","sourcesContent":["// Backbone.Radio v1.0.2\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone'], factory) :\n  global.Backbone.Radio = factory(global._, global.Backbone)\n}(this, function (_, Backbone) { 'use strict';\n\n  var previousRadio = Backbone.Radio;\n\n  var Radio = Backbone.Radio = {};\n\n  Radio.VERSION = '1.0.2';\n\n  // This allows you to run multiple instances of Radio on the same\n  // webapp. After loading the new version, call `noConflict()` to\n  // get a reference to it. At the same time the old version will be\n  // returned to Backbone.Radio.\n  Radio.noConflict = function () {\n    Backbone.Radio = previousRadio;\n    return this;\n  };\n\n  // Whether or not we're in DEBUG mode or not. DEBUG mode helps you\n  // get around the issues of lack of warnings when events are mis-typed.\n  Radio.DEBUG = false;\n\n  // Format debug text.\n  Radio._debugText = function(warning, eventName, channelName) {\n    return warning + (channelName ? ' on the ' + channelName + ' channel' : '') +\n      ': \"' + eventName + '\"';\n  };\n\n  // This is the method that's called when an unregistered event was called.\n  // By default, it logs warning to the console. By overriding this you could\n  // make it throw an Error, for instance. This would make firing a nonexistent event\n  // have the same consequence as firing a nonexistent method on an Object.\n  Radio.debugLog = function(warning, eventName, channelName) {\n    if (Radio.DEBUG && console && console.warn) {\n      console.warn(Radio._debugText(warning, eventName, channelName));\n    }\n  };\n\n  var eventSplitter = /\\s+/;\n\n  // An internal method used to handle Radio's method overloading for Requests.\n  // It's borrowed from Backbone.Events. It differs from Backbone's overload\n  // API (which is used in Backbone.Events) in that it doesn't support space-separated\n  // event names.\n  Radio._eventsApi = function(obj, action, name, rest) {\n    if (!name) {\n      return false;\n    }\n\n    var results = {};\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        var result = obj[action].apply(obj, [key, name[key]].concat(rest));\n        eventSplitter.test(key) ? _.extend(results, result) : results[key] = result;\n      }\n      return results;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        results[names[i]] = obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return results;\n    }\n\n    return false;\n  };\n\n  // An optimized way to execute callbacks.\n  Radio._callHandler = function(callback, context, args) {\n    var a1 = args[0], a2 = args[1], a3 = args[2];\n    switch(args.length) {\n      case 0: return callback.call(context);\n      case 1: return callback.call(context, a1);\n      case 2: return callback.call(context, a1, a2);\n      case 3: return callback.call(context, a1, a2, a3);\n      default: return callback.apply(context, args);\n    }\n  };\n\n  // A helper used by `off` methods to the handler from the store\n  function removeHandler(store, name, callback, context) {\n    var event = store[name];\n    if (\n       (!callback || (callback === event.callback || callback === event.callback._callback)) &&\n       (!context || (context === event.context))\n    ) {\n      delete store[name];\n      return true;\n    }\n  }\n\n  function removeHandlers(store, name, callback, context) {\n    store || (store = {});\n    var names = name ? [name] : _.keys(store);\n    var matched = false;\n\n    for (var i = 0, length = names.length; i < length; i++) {\n      name = names[i];\n\n      // If there's no event by this name, log it and continue\n      // with the loop\n      if (!store[name]) {\n        continue;\n      }\n\n      if (removeHandler(store, name, callback, context)) {\n        matched = true;\n      }\n    }\n\n    return matched;\n  }\n\n  /*\n   * tune-in\n   * -------\n   * Get console logs of a channel's activity\n   *\n   */\n\n  var _logs = {};\n\n  // This is to produce an identical function in both tuneIn and tuneOut,\n  // so that Backbone.Events unregisters it.\n  function _partial(channelName) {\n    return _logs[channelName] || (_logs[channelName] = _.partial(Radio.log, channelName));\n  }\n\n  _.extend(Radio, {\n\n    // Log information about the channel and event\n    log: function(channelName, eventName) {\n      var args = _.rest(arguments, 2);\n      console.log('[' + channelName + '] \"' + eventName + '\"', args);\n    },\n\n    // Logs all events on this channel to the console. It sets an\n    // internal value on the channel telling it we're listening,\n    // then sets a listener on the Backbone.Events\n    tuneIn: function(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = true;\n      channel.on('all', _partial(channelName));\n      return this;\n    },\n\n    // Stop logging all of the activities on this channel to the console\n    tuneOut: function(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = false;\n      channel.off('all', _partial(channelName));\n      delete _logs[channelName];\n      return this;\n    }\n  });\n\n\n  /*\n   * Backbone.Radio.Requests\n   * -----------------------\n   * A messaging system for requesting data.\n   *\n   */\n\n  function makeCallback(callback) {\n    return _.isFunction(callback) ? callback : function () { return callback; };\n  }\n\n  Radio.Requests = {\n\n    // Make a request\n    request: function(name) {\n      var args = _.rest(arguments);\n      var results = Radio._eventsApi(this, 'request', name, args);\n      if (results) {\n        return results;\n      }\n      var channelName = this.channelName;\n      var requests = this._requests;\n\n      // Check if we should log the request, and if so, do it\n      if (channelName && this._tunedIn) {\n        Radio.log.apply(this, [channelName, name].concat(args));\n      }\n\n      // If the request isn't handled, log it in DEBUG mode and exit\n      if (requests && (requests[name] || requests['default'])) {\n        var handler = requests[name] || requests['default'];\n        args = requests[name] ? args : arguments;\n        return Radio._callHandler(handler.callback, handler.context, args);\n      } else {\n        Radio.debugLog('An unhandled request was fired', name, channelName);\n      }\n    },\n\n    // Set up a handler for a request\n    reply: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'reply', name, [callback, context])) {\n        return this;\n      }\n\n      this._requests || (this._requests = {});\n\n      if (this._requests[name]) {\n        Radio.debugLog('A request was overwritten', name, this.channelName);\n      }\n\n      this._requests[name] = {\n        callback: makeCallback(callback),\n        context: context || this\n      };\n\n      return this;\n    },\n\n    // Set up a handler that can only be requested once\n    replyOnce: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'replyOnce', name, [callback, context])) {\n        return this;\n      }\n\n      var self = this;\n\n      var once = _.once(function() {\n        self.stopReplying(name);\n        return makeCallback(callback).apply(this, arguments);\n      });\n\n      return this.reply(name, once, context);\n    },\n\n    // Remove handler(s)\n    stopReplying: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'stopReplying', name)) {\n        return this;\n      }\n\n      // Remove everything if there are no arguments passed\n      if (!name && !callback && !context) {\n        delete this._requests;\n      } else if (!removeHandlers(this._requests, name, callback, context)) {\n        Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\n      }\n\n      return this;\n    }\n  };\n\n  /*\n   * Backbone.Radio.channel\n   * ----------------------\n   * Get a reference to a channel by name.\n   *\n   */\n\n  Radio._channels = {};\n\n  Radio.channel = function(channelName) {\n    if (!channelName) {\n      throw new Error('You must provide a name for the channel.');\n    }\n\n    if (Radio._channels[channelName]) {\n      return Radio._channels[channelName];\n    } else {\n      return (Radio._channels[channelName] = new Radio.Channel(channelName));\n    }\n  };\n\n  /*\n   * Backbone.Radio.Channel\n   * ----------------------\n   * A Channel is an object that extends from Backbone.Events,\n   * and Radio.Requests.\n   *\n   */\n\n  Radio.Channel = function(channelName) {\n    this.channelName = channelName;\n  };\n\n  _.extend(Radio.Channel.prototype, Backbone.Events, Radio.Requests, {\n\n    // Remove all handlers from the messaging systems of this channel\n    reset: function() {\n      this.off();\n      this.stopListening();\n      this.stopReplying();\n      return this;\n    }\n  });\n\n  /*\n   * Top-level API\n   * -------------\n   * Supplies the 'top-level API' for working with Channels directly\n   * from Backbone.Radio.\n   *\n   */\n\n  var channel, args, systems = [Backbone.Events, Radio.Commands, Radio.Requests];\n\n  _.each(systems, function(system) {\n    _.each(system, function(method, methodName) {\n      Radio[methodName] = function(channelName) {\n        args = _.rest(arguments);\n        channel = this.channel(channelName);\n        return channel[methodName].apply(channel, args);\n      };\n    });\n  });\n\n  Radio.reset = function(channelName) {\n    var channels = !channelName ? this._channels : [this._channels[channelName]];\n    _.invoke(channels, 'reset');\n  };\n\n  var backbone_radio = Radio;\n\n  return backbone_radio;\n\n}));\n"],"sourceRoot":"/source/"}