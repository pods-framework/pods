{"version":3,"file":"pods-dfv.min.js","sources":["_src/core/pods-field-model.js","_src/core/pods-field-views.js","_src/file-upload/file-upload-model.js","_src/file-upload/views/file-upload-list.js","_src/file-upload/views/file-upload-form.js","_src/file-upload/uploaders/pods-file-uploader.js","_src/file-upload/views/file-upload-queue.js","_src/file-upload/file-upload.js","_src/file-upload/uploaders/plupload.js","_src/file-upload/uploaders/media-modal.js","_src/core/dfv-modal.js","_src/core/iframe-frame.js","_src/pick/relationship-model.js","_src/pick/pick-field-model.js","_src/pick/views/radio-view.js","_src/pick/views/checkbox-view.js","_src/pick/views/select-view.js","_src/pick/views/list-view.js","_src/pick/views/add-new.js","_src/pick/pick.js","_src/pods-dfv-init.js","_src/pods-dfv.js"],"sourcesContent":["/*global jQuery, _, Backbone, Marionette */\nexport const PodsDFVFieldModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\thtmlAttr   : {},\n\t\tfieldConfig: {}\n\t}\n} );","/*global jQuery, _, Backbone, Marionette */\n\n/**\n *\n */\nexport const PodsFieldListView = Marionette.CollectionView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tinitialize: function ( options ) {\n\t\tthis.fieldModel = options.fieldModel;\n\t\tthis.childViewOptions = { fieldModel: options.fieldModel };\n\t}\n} );\n\n/**\n * @extends Backbone.View\n */\nexport const PodsFieldView = Marionette.View.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tserializeData: function () {\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tlet data = this.model ? this.model.toJSON() : {};\n\n\t\tdata.htmlAttr = fieldModel.get( 'htmlAttr' );\n\t\tdata.fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\treturn data;\n\t}\n} );\n\n/**\n * Top-level \"main field container\"\n */\nexport const PodsDFVFieldLayout = Marionette.View.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tinitialize: function ( options ) {\n\t\tthis.fieldItemData = options.fieldItemData;\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n/**\n *\n */\nexport const FileUploadModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t'id'       : 0,\n\t\t'icon'     : '',\n\t\t'name'     : '',\n\t\t'edit_link': '',\n\t\t'link'     : '',\n\t\t'download' : ''\n\t}\n} );\n\n/**\n *\n */\nexport const FileUploadCollection = Backbone.Collection.extend( {\n\tmodel: FileUploadModel\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-item.html';\n\nimport {PodsFieldListView, PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n * Individual list items, representing a single file\n */\nexport const FileUploadItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tclassName: 'pods-dfv-list-item',\n\n\tui: {\n\t\tdragHandle  : '.pods-dfv-list-handle',\n\t\teditLink    : '.pods-dfv-list-edit-link',\n\t\tviewLink    : '.pods-dfv-list-link',\n\t\tdownloadLink: '.pods-dfv-list-download',\n\t\tremoveButton: '.pods-dfv-list-remove',\n\t\titemName    : '.pods-dfv-list-name'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'remove:file:click'\n\t}\n} );\n\n/**\n * The file list container\n */\nexport const FileUploadList = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list',\n\n\tchildView: FileUploadItem,\n\n\tchildViewTriggers: {\n\t\t'remove:file:click': 'childview:remove:file:click'\n\t},\n\n\tonAttach: function () {\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\t\tlet sort_axis = 'y';\n\n\t\t// @todo\n\t\t// http://stackoverflow.com/questions/1735372/jquery-sortable-list-scroll-bar-jumps-up-when-sorting/4187833#4187833\n\n\t\tif ( 1 != fieldConfig[ 'file_limit' ] ) {\n\n\t\t\tif ( 'tiles' == fieldConfig[ 'file_field_template' ] ) {\n\t\t\t\tsort_axis = '';\n\t\t\t}\n\n\t\t\t// init sortable\n\t\t\tthis.$el.sortable( {\n\t\t\t\tcontainment      : 'parent',\n\t\t\t\taxis             : sort_axis,\n\t\t\t\tscrollSensitivity: 40,\n\t\t\t\ttolerance        : 'pointer',\n\t\t\t\topacity          : 0.6\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-form.html';\n\nimport {PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\nexport const FileUploadForm = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'div',\n\n\ttemplate: _.template( template ),\n\n\tui: {\n\t\taddButton: '.pods-dfv-list-add'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.addButton': 'childview:add:file:click'\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n/**\n *\n * @param {Object} options\n *\n * @param {Object} options.browseButton   Existing and attached DOM node\n * @param {Object} options.uiRegion       Marionette.Region object\n * @param {Object} options.fieldConfig\n *\n * @param {string} options.fieldConfig.file_modal_title\n * @param {string} options.fieldConfig.file_modal_add_button\n * @param {string} options.fieldConfig.file_limit\n * @param {string} options.fieldConfig.limit_extensions\n * @param {string} options.fieldConfig.limit_types\n * @param {string} options.fieldConfig.file_attachment_tab\n *\n * @param {Object} options.fieldConfig.plupload_init\n * @param {Object} options.fieldConfig.plupload_init.browse_button\n *\n * @class\n */\nexport const PodsFileUploader = Marionette.Object.extend( {\n\n\tconstructor: function ( options ) {\n\t\t// Magically set the object properties we need, they'll just \"be there\" for the concrete instance\n\t\tthis.browseButton = options.browseButton;\n\t\tthis.uiRegion = options.uiRegion;\n\t\tthis.fieldConfig = options.fieldConfig;\n\n\t\tMarionette.Object.call( this, options );\n\t}\n\n} );\n\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-queue.html';\n\nexport const FileUploadQueueModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\tid       : 0,\n\t\tfilename : '',\n\t\tprogress : 0,\n\t\terrorMsg: ''\n\t}\n} );\n\n/**\n *\n */\nexport const FileUploadQueueItem = Marionette.View.extend( {\n\tmodel: FileUploadQueueModel,\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tattributes: function () {\n\t\treturn {\n\t\t\tclass: 'pods-dfv-list-item',\n\t\t\tid   : this.model.get( 'id' )\n\t\t};\n\t},\n\n\tmodelEvents: {\n\t\t'change': 'onModelChanged'\n\t},\n\n\tonModelChanged: function () {\n\t\tthis.render();\n\t}\n\n} );\n\n/**\n *\n */\nexport const FileUploadQueue = Marionette.CollectionView.extend( {\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list pods-dfv-list-queue',\n\n\tchildView: FileUploadQueueItem\n} );\n","/*global jQuery, _, Backbone, Marionette */\nimport template from 'pods-dfv/_src/file-upload/file-upload-layout.html';\n\nimport { PodsDFVFieldLayout } from 'pods-dfv/_src/core/pods-field-views';\n\nimport { FileUploadCollection } from 'pods-dfv/_src/file-upload/file-upload-model';\n\nimport { FileUploadList } from 'pods-dfv/_src/file-upload/views/file-upload-list';\nimport { FileUploadForm } from 'pods-dfv/_src/file-upload/views/file-upload-form';\n\nimport { Plupload } from 'pods-dfv/_src/file-upload/uploaders/plupload';\nimport { MediaModal } from 'pods-dfv/_src/file-upload/uploaders/media-modal';\n\nconst Uploaders = [\n\tPlupload,\n\tMediaModal\n];\n\nconst UNLIMITED_FILES = 0;\n\n/**\n * @extends Backbone.View\n */\nexport const FileUpload = PodsDFVFieldLayout.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttemplate: _.template( template ),\n\n\tregions: {\n\t\tlist    : '.pods-ui-file-list',\n\t\tuiRegion: '.pods-ui-region', // \"Utility\" container for uploaders to use\n\t\tform    : '.pods-ui-form'\n\t},\n\n\tchildViewEvents: {\n\t\t'childview:remove:file:click': 'onChildviewRemoveFileClick',\n\t\t'childview:add:file:click'   : 'onChildviewAddFileClick'\n\t},\n\n\tuploader: {},\n\n\t/**\n\t *\n\t */\n\tonBeforeRender: function () {\n\t\tif ( this.collection === undefined ) {\n\t\t\tthis.collection = new FileUploadCollection( this.fieldItemData );\n\t\t}\n\t},\n\n\tonRender: function () {\n\t\tconst listView = new FileUploadList( { collection: this.collection, fieldModel: this.model } );\n\t\tconst formView = new FileUploadForm( { fieldModel: this.model } );\n\n\t\tthis.showChildView( 'list', listView );\n\t\tthis.showChildView( 'form', formView );\n\n\t\t// Setup the uploader and listen for a response event\n\t\tthis.uploader = this.createUploader();\n\t\tthis.listenTo( this.uploader, 'added:files', this.onAddedFiles );\n\t},\n\n\t/**\n\t * Fired by a remove:file:click trigger in any child view\n\t *\n\t * @param childView View that was the source of the event\n\t */\n\tonChildviewRemoveFileClick: function ( childView ) {\n\t\tthis.collection.remove( childView.model );\n\t},\n\n\t/**\n\t * Fired by a add:file:click trigger in any child view\n\t *\n\t * plupload fields should never generate this event, it places a shim over our button and handles the\n\t * event internally.  But this event does still come through with plupload fields in some browser\n\t * environments for reasons we've been unable to determine.\n\t */\n\tonChildviewAddFileClick: function () {\n\n\t\t// Invoke the uploader\n\t\tif ( 'function' === typeof this.uploader.invoke ) {\n\t\t\tthis.uploader.invoke();\n\t\t}\n\t},\n\n\t/**\n\t * Concrete uploader implementations simply need to: this.trigger( 'added:files', newFiles )\n\t *\n\t * @param {Object[]} data An array of model objects to be added\n\t */\n\tonAddedFiles: function ( data ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\t\tconst fileLimit   = +fieldConfig[ 'file_limit' ]; // Unary plus to force to number\n\t\tlet newCollection, filteredModels;\n\n\t\t// Get a copy of the existing collection with the new files added\n\t\tnewCollection = this.collection.clone();\n\t\tnewCollection.add( data );\n\n\t\t// Enforce the file limit option if one is set\n\t\tif ( UNLIMITED_FILES === fileLimit ) {\n\t\t\tfilteredModels = newCollection.models;\n\t\t}\n\t\telse {\n\t\t\t// Number of uploads is limited: keep the last N models, FIFO/queue style\n\t\t\tfilteredModels = newCollection.filter( function ( model ) {\n\t\t\t\treturn ( newCollection.indexOf( model ) >= newCollection.length - fileLimit );\n\t\t\t} );\n\t\t}\n\n\t\tthis.collection.reset( filteredModels );\n\t},\n\n\tcreateUploader: function () {\n\t\tconst fieldConfig    = this.model.get( 'fieldConfig' );\n\t\tconst targetUploader = fieldConfig[ 'file_uploader' ];\n\t\tlet Uploader;\n\n\t\tjQuery.each( Uploaders, function ( index, thisUploader ) {\n\t\t\tif ( targetUploader === thisUploader.prototype.fileUploader ) {\n\t\t\t\tUploader = thisUploader;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\tif ( Uploader !== undefined ) {\n\t\t\tthis.uploader = new Uploader( {\n\t\t\t\t// We provide regular DOM element for the button\n\t\t\t\tbrowseButton: this.getRegion( 'form' ).getEl( '.pods-dfv-list-add' ).get(),\n\t\t\t\tuiRegion    : this.getRegion( 'uiRegion' ),\n\t\t\t\tfieldConfig : fieldConfig\n\t\t\t} );\n\t\t\treturn this.uploader;\n\t\t}\n\t\telse {\n\t\t\t// @todo sprintf type with PodsI18n.__()\n\t\t\tthrow \"Could not locate file uploader '\" + targetUploader + \"'\";\n\t\t}\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, plupload, PodsI18n */\nimport {PodsFileUploader} from 'pods-dfv/_src/file-upload/uploaders/pods-file-uploader';\nimport {FileUploadQueueModel, FileUploadQueue} from 'pods-dfv/_src/file-upload/views/file-upload-queue';\n\nexport const Plupload = PodsFileUploader.extend( {\n\tplupload: {},\n\n\tfileUploader: 'plupload',\n\n\tinitialize: function () {\n\t\t// Set the browse button argument for plupload... it's required\n\t\tthis.fieldConfig[ 'plupload_init' ][ 'browse_button' ] = this.browseButton;\n\n\t\tthis.plupload = new plupload.Uploader( this.fieldConfig[ 'plupload_init' ] );\n\t\tthis.plupload.init();\n\n\t\t// Setup all callbacks: ( event_name, callback, context )\n\t\tthis.plupload.bind( 'FilesAdded', this.onFilesAdded, this );\n\t\tthis.plupload.bind( 'UploadProgress', this.onUploadProgress, this );\n\t\tthis.plupload.bind( 'FileUploaded', this.onFileUploaded, this );\n\t},\n\n\t/**\n\t * Fired after files have been selected from the dialog\n\t *\n\t * @param up\n\t * @param files\n\t */\n\tonFilesAdded: function ( up, files ) {\n\t\tlet model,\n\t\t\tcollection,\n\t\t\tview;\n\n\t\t// Assemble the collection data for the file queue\n\t\tcollection = new Backbone.Collection();\n\t\tjQuery.each( files, function ( index, file ) {\n\t\t\tmodel = new FileUploadQueueModel( {\n\t\t\t\tid      : file.id,\n\t\t\t\tfilename: file.name\n\t\t\t} );\n\n\t\t\tcollection.add( model );\n\t\t} );\n\n\t\t// Create a new view based on the collection\n\t\tview = new FileUploadQueue( { collection: collection } );\n\t\tview.render();  // Generate the HTML, not attached to the DOM yet\n\n\t\t// Reset the region in case any error messages are hanging around from a previous upload\n\t\t// and show the new file upload queue\n\t\tthis.uiRegion.reset();\n\t\tthis.uiRegion.show( view );\n\n\t\t// Stash references\n\t\tthis.queueCollection = collection;\n\n\t\tup.refresh();\n\t\tup.start();\n\t},\n\n\t/**\n\t *\n\t * @param up\n\t * @param file\n\t */\n\tonUploadProgress: function ( up, file ) {\n\t\tconst model = this.queueCollection.get( file.id );\n\t\tmodel.set( { progress: file.percent } );\n\t},\n\n\t/**\n\t *\n\t * @param up\n\t * @param file\n\t * @param resp\n\t */\n\tonFileUploaded: function ( up, file, resp ) {\n\t\tconst model = this.queueCollection.get( file.id );\n\t\tlet response = resp.response;\n\t\tlet newFile = [];\n\t\tlet json;\n\n\t\t// Error condition 1\n\t\tif ( \"Error: \" == resp.response.substr( 0, 7 ) ) {\n\t\t\tresponse = response.substr( 7 );\n\t\t\tif ( window.console ) {\n\t\t\t\tconsole.log( response );\n\t\t\t}\n\n\t\t\tmodel.set( {\n\t\t\t\tprogress: 0,\n\t\t\t\terrorMsg: response\n\t\t\t} );\n\t\t}\n\t\t// Error condition 2\n\t\telse if ( \"<e>\" == resp.response.substr( 0, 3 ) ) {\n\t\t\tresponse = jQuery( response ).text(); // Strip tags, text only\n\t\t\tif ( window.console ) {\n\t\t\t\tconsole.log( response );\n\t\t\t}\n\n\t\t\tmodel.set( {\n\t\t\t\tprogress: 0,\n\t\t\t\terrorMsg: response\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\tjson = response.match( /{.*}$/ );\n\n\t\t\tif ( null !== json && 0 < json.length ) {\n\t\t\t\tjson = jQuery.parseJSON( json[ 0 ] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjson = {};\n\t\t\t}\n\n\t\t\tif ( 'object' != typeof json || jQuery.isEmptyObject( json ) ) {\n\t\t\t\tif ( window.console ) {\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\tif ( window.console ) {\n\t\t\t\t\tconsole.log( json );\n\t\t\t\t}\n\n\t\t\t\tmodel.set( {\n\t\t\t\t\tprogress: 0,\n\t\t\t\t\terrorMsg: PodsI18n.__( 'Error uploading file: ' ) + file.name\n\t\t\t\t} );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewFile = {\n\t\t\t\tid       : json.ID,\n\t\t\t\ticon     : json.thumbnail,\n\t\t\t\tname     : json.post_title,\n\t\t\t\tedit_link: json.edit_link,\n\t\t\t\tlink     : json.link,\n\t\t\t\tdownload : json.download\n\t\t\t};\n\n\t\t\t// Remove the file from the upload queue model and trigger an event for the hosting container\n\t\t\tmodel.trigger( 'destroy', model );\n\t\t\tthis.trigger( 'added:files', newFile );\n\t\t}\n\t}\n\n} );\n\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\nimport { PodsFileUploader } from 'pods-dfv/_src/file-upload/uploaders/pods-file-uploader';\n\nexport const MediaModal = PodsFileUploader.extend( {\n\tmediaObject: {},\n\n\tfileUploader: 'attachment',\n\n\tinvoke: function () {\n\n\t\tif ( wp.Uploader.defaults.filters.mime_types === undefined ) {\n\t\t\twp.Uploader.defaults.filters.mime_types = [ { title: PodsI18n.__( 'Allowed Files' ), extensions: '*' } ];\n\t\t}\n\n\t\tlet defaultExt = wp.Uploader.defaults.filters.mime_types[ 0 ].extensions;\n\n\t\twp.Uploader.defaults.filters.mime_types[ 0 ].extensions = this.fieldConfig[ 'limit_extensions' ];\n\n\t\t// set our settings\n\t\tthis.mediaObject = wp.media( {\n\t\t\ttitle   : this.fieldConfig[ 'file_modal_title' ],\n\t\t\tmultiple: ( 1 != this.fieldConfig[ 'file_limit' ] ),\n\t\t\tlibrary : {\n\t\t\t\ttype: this.fieldConfig[ 'limit_types' ]\n\t\t\t},\n\t\t\t// Customize the submit button.\n\t\t\tbutton  : {\n\t\t\t\t// Set the text of the button.\n\t\t\t\ttext: this.fieldConfig[ 'file_modal_add_button' ]\n\t\t\t}\n\t\t} );\n\n\t\t// One-shot callback ( event, callback, context )\n\t\tthis.mediaObject.once( 'select', this.onMediaSelect, this );\n\n\t\t// open the frame\n\t\tthis.mediaObject.open();\n\t\tthis.mediaObject.content.mode( this.fieldConfig[ 'file_attachment_tab' ] );\n\n\t\t// Reset the allowed file extensions\n\t\twp.Uploader.defaults.filters.mime_types[ 0 ].extensions = defaultExt;\n\t},\n\n\tonMediaSelect: function () {\n\t\tconst selection = this.mediaObject.state().get( 'selection' );\n\t\tlet newFiles = [];\n\n\t\tif ( !selection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// loop through the selected files\n\t\tselection.each( function ( attachment ) {\n\t\t\tconst sizes = attachment.attributes.sizes;\n\t\t\tlet attachmentThumbnail;\n\n\t\t\t// by default use the generic icon\n\t\t\tattachmentThumbnail = attachment.attributes.icon;\n\n\t\t\t// only thumbnails have sizes which is what we're on the hunt for\n\t\t\tif ( sizes !== undefined ) {\n\t\t\t\t// Get thumbnail if it exists\n\t\t\t\tif ( sizes.thumbnail !== undefined && sizes.thumbnail.url !== undefined ) {\n\t\t\t\t\tattachmentThumbnail = sizes.thumbnail.url;\n\t\t\t\t}// If thumbnail doesn't exist, get full because this is a small image\n\t\t\t\telse if ( sizes.full !== undefined && sizes.full.url !== undefined ) {\n\t\t\t\t\tattachmentThumbnail = sizes.full.url;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewFiles.push( {\n\t\t\t\tid       : attachment.attributes.id,\n\t\t\t\ticon     : attachmentThumbnail,\n\t\t\t\tname     : attachment.attributes.title,\n\t\t\t\tedit_link: attachment.attributes.editLink,\n\t\t\t\tlink     : attachment.attributes.link,\n\t\t\t\tdownload : attachment.attributes.url\n\t\t\t} );\n\t\t} );\n\n\t\t// Fire an event with an array of models to be added\n\t\tthis.trigger( 'added:files', newFiles );\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\n/**\n * A frame for displaying a modal popup with iframe content\n *\n * @augments wp.media.view.Frame\n */\nexport const PodsDFVModal = wp.media.view.Modal.extend( {\n\n\t/**\n\t * @param {Object} options\n\t * @returns {wp.media.view.Modal} Returns itself to allow chaining\n\t */\n\tclose: function( options ) {\n\t\tconst retVal = wp.media.view.Modal.prototype.close.apply( this, options );\n\n\t\t// Alert the listening control when we've been cancelled\n\t\tif ( options && options.escape ) {\n\t\t\twindow.parent.jQuery( window.parent ).trigger( 'dfv:modal:cancel' );\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\nimport {PodsDFVModal} from 'pods-dfv/_src/core/dfv-modal';\n\n/**\n * A frame for displaying a modal popup with iframe content\n *\n * @augments wp.media.view.Frame\n */\nexport const IframeFrame = wp.media.view.Frame.extend( {\n\tclassName: 'pods-modal-frame',\n\n\ttemplate: _.template( '<div class=\"media-frame-title\" /><div class=\"media-frame-iframe\" />' ),\n\n\tregions: [ 'title', 'iframe' ],\n\n\tinitialize: function () {\n\t\twp.media.view.Frame.prototype.initialize.apply( this, arguments );\n\n\t\t// Ensure core UI is enabled.\n\t\tthis.$el.addClass( 'wp-core-ui' );\n\n\t\tthis.initState();\n\t\tthis.initModal();\n\n\t\tthis.on( 'iframe:create:default', this.iframeContent, this );\n\t\tthis.iframe.mode( 'default' );\n\n\t\tthis.on( 'title:create:default', this.createTitle, this );\n\t\tthis.title.mode( 'default' );\n\t\tthis.on( 'title:render', function ( view ) {\n\t\t\tview.$el.append( '<span class=\"dashicons dashicons-arrow-down\"></span>' );\n\t\t} );\n\t},\n\n\tinitState: function () {\n\t\tconst title = this.options.title || PodsI18n.__( 'Add New Record' );\n\t\tconst src = this.options.src || '/';\n\n\t\tthis.states.add( [\n\t\t\tnew wp.media.controller.State( {\n\t\t\t\tid   : 'default',\n\t\t\t\ttitle: title,\n\t\t\t\tsrc  : src\n\t\t\t} )\n\t\t] );\n\n\t\tthis.options.state = 'default';\n\t},\n\n\tinitModal: function () {\n\t\tthis.modal = new PodsDFVModal( {\n\t\t\tcontroller: this\n\t\t} );\n\n\t\tthis.modal.content( this );\n\t},\n\n\trender: function () {\n\t\t// Activate the default state if no active state exists.\n\t\tif ( !this.state() && this.options.state ) {\n\t\t\tthis.setState( this.options.state );\n\t\t}\n\n\t\t/**\n\t\t * call 'render' directly on the parent class\n\t\t */\n\t\treturn wp.media.view.Frame.prototype.render.apply( this, arguments );\n\t},\n\n\t/**\n\t * @param {Object} content\n\t * @this wp.media.controller.Region\n\t */\n\tiframeContent: function ( content ) {\n\t\tcontent.view = new wp.media.view.Iframe( {\n\t\t\tcontroller: this\n\t\t} );\n\t},\n\n\tcreateTitle: function ( title ) {\n\t\ttitle.view = new wp.media.View( {\n\t\t\tcontroller: this,\n\t\t\ttagName   : 'h1'\n\t\t} );\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n\n/**\n *\n */\nexport const RelationshipModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t'id'           : 0,\n\t\t'name'         : '',\n\t\t'icon'         : '',\n\t\t'use_dashicon' : false,\n\t\t'link'         : '',\n\t\t'edit_link'    : '',\n\t\t'selected'     : false\n\t},\n\n\ttoggleSelected: function () {\n\t\tthis.set( 'selected', !this.get( 'selected' ) );\n\t}\n} );\n\n/**\n *\n */\nexport const RelationshipCollection = Backbone.Collection.extend( {\n\tmodel: RelationshipModel,\n\n\t/**\n\t *\n\t * @param { ?string[] } ids\n\t */\n\tsetSelected: function ( ids ) {\n\t\tthis.map( function ( thisModel ) {\n\t\t\tconst selected = _.contains( ids, thisModel.get( 'id' ) + '' );\n\t\t\tthisModel.set( 'selected', selected );\n\t\t} );\n\t},\n\n\t/**\n\t * Return a new collection containing just the selected items in this one\n\t *\n\t * @returns {*}\n\t */\n\tfilterBySelected: function () {\n\n\t\t// Get an array with only the selected items\n\t\tconst filtered = this.filter( function ( itemModel ) {\n\t\t\treturn ( itemModel.get( 'selected' ) );\n\t\t} );\n\n\t\t// this.filter is going to return an array, so create a collection out of it\n\t\treturn new RelationshipCollection( filtered );\n\t},\n\n\t/**\n\t * Return a new collection containing just the unselected items in this one\n\t *\n\t * @returns {*}\n\t */\n\tfilterByUnselected: function () {\n\n\t\t// Get an array with only the unselected items\n\t\tconst filtered = this.filter( function ( itemModel ) {\n\t\t\treturn !( itemModel.get( 'selected' ) );\n\t\t} );\n\n\t\t// this.filter is going to return an array, so create a collection out of it\n\t\treturn new RelationshipCollection( filtered );\n\t}\n\n} );\n\n","/*global jQuery, _, Backbone, Marionette */\n\nexport const PickFieldModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t\"view_name\"          : \"select\",\n\t\t\"iframe_src\"         : \"\",\n\t\t\"pick_format_type\"   : \"single\",\n\t\t\"pick_show_icon\"     : false,\n\t\t\"pick_show_view_link\": false,\n\t\t\"pick_show_edit_link\": false\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/radio-item.html';\n\nimport {PodsFieldListView, PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const RadioItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model ) + 1 // One based indexing unlike checkboxes\n\t\t};\n\t},\n\n\tmodelChanged: function () {\n\t\tthis.render();\n\t}\n\n} );\n\n/**\n *\n */\nexport const RadioView = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-radio',\n\n\tchildView: RadioItem\n} );","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/checkbox-item.html';\n\nimport {PodsFieldListView, PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const CheckboxItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tclassName: 'pods-pick',\n\n\tui: {\n\t\tcheckbox: 'input.pods-form-ui-field-type-pick'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.checkbox': 'toggle:selected'\n\t},\n\n\tmodelEvents: {\n\t\t'change': 'modelChanged'\n\t},\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model )\n\t\t};\n\t},\n\n\tmodelChanged: function () {\n\t\tthis.render();\n\t}\n} );\n\n/**\n *\n */\nexport const CheckboxView = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-checkbox-view',\n\n\tchildView: CheckboxItem,\n\n\tchildViewEvents: {\n\t\t'toggle:selected': 'onChildviewToggleSelected'\n\t},\n\n\t/**\n\t *\n\t */\n\tonAttach: function () {\n\n\t\t// Check initial selection limit status and enforce it if needed\n\t\tif ( ! this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewToggleSelected: function ( childView ) {\n\n\t\tchildView.model.toggleSelected();\n\n\t\t// Dynamically enforce selection limit\n\t\tif ( this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitUnder();\n\t\t} else {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t * @returns {boolean} true if unlimited selections are allowed or we're below the selection limit\n\t */\n\tvalidateSelectionLimit: function ( ) {\n\t\tconst fieldConfig = this.fieldModel.get( 'fieldConfig' );\n\t\tlet limit, numSelected;\n\n\t\tlimit = +fieldConfig.pick_limit;  // Unary plus will implicitly cast to number\n\t\tnumSelected = this.collection.filterBySelected().length;\n\n\t\tif ( 0 === limit || numSelected < limit ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitOver: function ( ) {\n\t\tthis.$el.find( 'input:checkbox:not(:checked)' ).prop( 'disabled', true );\n\t\tthis.trigger( 'selection:limit:over', this );\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitUnder: function ( ) {\n\t\tthis.$el.find( 'input:checkbox' ).prop( 'disabled', false );\n\t\tthis.trigger( 'selection:limit:under', this );\n\t}\n\n} );","/*global jQuery, _, Backbone, Marionette, select2, sprintf, wp, ajaxurl, PodsI18n */\n\n// Note: this is a template-less view\nimport {PodsFieldListView, PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\nimport {RelationshipCollection} from 'pods-dfv/_src/pick/relationship-model';\n\nconst SELECT2_UL_TARGET = 'ul.select2-selection__rendered';\nconst SELECT2_SELECTED_TARGET = '.select2-selection__choice';\n\n/**\n * option\n *\n * @extends Backbone.View\n */\nexport const SelectItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'option',\n\n\ttemplate: false,\n\n\tinitialize: function ( options ) {\n\t\tthis.$el.val( this.model.get( 'id' ) );\n\n\t\tthis.$el.html( this.model.get( 'name' ) );\n\n\t\tif ( this.model.get( 'selected' ) ) {\n\t\t\tthis.$el.prop( 'selected', 'selected' );\n\t\t}\n\t}\n} );\n\n/**\n * optgroup\n *\n * @extends Backbone.View\n */\nexport const Optgroup = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'optgroup',\n\n\tchildView: SelectItem,\n\n\tattributes: function () {\n\t\treturn {\n\t\t\tlabel: this.model.get( 'label' )\n\t\t};\n\t}\n} );\n\n/**\n * select\n *\n * @extends Backbone.View\n */\nexport const SelectView = Marionette.CollectionView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'select',\n\n\ttriggers: {\n\t\t\"change\": {\n\t\t\tevent          : \"change:selected\",\n\t\t\tstopPropagation: false\n\t\t},\n\t},\n\n\tmultiLastValidSelection: [],\n\n\t/**\n\t *\n\t * @param newCollection\n\t */\n\tsetCollection: function( newCollection ) {\n\t\tthis.collection = newCollection;\n\t},\n\n\t/**\n\t *\n\t * @param options\n\t */\n\tinitialize: function ( options ) {\n\t\tthis.fieldModel = options.fieldModel;\n\t\tthis.fieldConfig = this.fieldModel.get( 'fieldConfig' );\n\t},\n\n\t/**\n\t * Set the proper child view (optgroups or no)\n\t *\n\t * @param item\n\t * @returns {*}\n\t */\n\tchildView: function ( item ) {\n\t\tif ( this.fieldConfig.optgroup ) {\n\t\t\treturn Optgroup;\n\t\t}\n\t\telse {\n\t\t\treturn SelectItem;\n\t\t}\n\t},\n\n\t/**\n\t * todo: We're bypassing the PodsFieldListView functionality, need to explicitly include it for now\n\t *\n\t * @param model\n\t * @param index\n\t * @returns {{fieldModel: *}}\n\t */\n\tchildViewOptions: function ( model, index ) {\n\t\tlet returnOptions = { fieldModel: this.fieldModel };\n\n\t\tif ( this.fieldConfig.optgroup ) {\n\t\t\treturnOptions.collection = new RelationshipCollection( model.get( 'collection' ) );\n\t\t}\n\n\t\treturn returnOptions;\n\t},\n\n\t/**\n\t * todo: We're bypassing the PodsFieldListView functionality, need to explicitly include it for now\n\t *\n\t * @returns {{}}\n\t */\n\tserializeData: function () {\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tlet data = this.model ? this.model.toJSON() : {};\n\n\t\tdata.htmlAttr = fieldModel.get( 'attributes' );\n\t\tdata.fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\treturn data;\n\t},\n\n\t/**\n\t *\n\t */\n\tattributes: function () {\n\n\t\t/**\n\t\t * @param {string} htmlAttr.name\n\t\t * @param {string} htmlAttr.class\n\t\t * @param {string} htmlAttr.name_clean\n\t\t * @param {string} htmlAttr.id\n\t\t *\n\t\t * @param {string} fieldConfig.pick_format_type 'single' or 'multi'\n\t\t */\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tconst htmlAttr = fieldModel.get( 'htmlAttr' );\n\t\tconst fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\tlet name = htmlAttr.name;\n\t\tif ( fieldConfig.pick_format_type === 'multi' ) {\n\t\t\tname = name + '[]';\n\t\t}\n\t\treturn {\n\t\t\t'name'           : name,\n\t\t\t'class'          : htmlAttr.class,\n\t\t\t'data-name-clean': htmlAttr.name_clean,\n\t\t\t'id'             : htmlAttr.id,\n\t\t\t'tabindex'       : '2',\n\t\t\t'multiple'       : ( fieldConfig.pick_format_type === 'multi' )\n\t\t};\n\t},\n\n\t/**\n\t * Setup to be done once attached to the DOM.  Select2 has some setup needs.\n\t *\n\t * @var {RelationshipCollection} this.collection\n\t */\n\tonAttach: function () {\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\t\tconst limit = this.fieldConfig.pick_limit;\n\t\tconst numSelected = this.collection.filterBySelected().length;\n\n\t\t// Initialize select2 fields\n\t\tif ( 'select2' === view_name ) {\n\t\t\tthis.setupSelect2();\n\t\t}\n\n\t\t// Check initial selection limit status for regular multiselect and enforce it if needed\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\n\t\t\t// Store initial selection in case we need to revert back from an invalid state\n\t\t\tthis.multiLastValidSelection = this.$el.val();\n\t\t}\n\n\t\t// If we're at the limit: disable all unselected items so no selections can be added\n\t\tif ( !this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t * @var {RelationshipCollection} this.collection\n\t */\n\tonChangeSelected: function () {\n\t\tconst limit = +this.fieldConfig.pick_limit; // Unary plus will implicitly cast to number\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\n\t\t// Regular multiselect may need to reject the selection change\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\n\t\t\t// Has the selection gone OVER the limit?  Can occur with consecutive item selection.\n\t\t\tif ( null !== this.$el.val() && 0 !== limit && limit < this.$el.val().length ) {\n\n\t\t\t\t// Revert to the last valid selection and punt on what they attempted\n\t\t\t\tthis.$el.val( this.multiLastValidSelection );\n\t\t\t\twindow.alert( `${PodsI18n.__( 'You can only select' )} ${sprintf( PodsI18n._n( '%s item', '%s items', limit ), limit )}` );\n\t\t\t\tthis.trigger( 'childview:change:selected', this );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Update the collection and last valid selection based on the new selections\n\t\tthis.collection.setSelected( this.$el.val() );\n\t\tthis.multiLastValidSelection = this.$el.val();\n\n\t\t// Dynamically enforce selection limits\n\t\tif ( this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitUnder();\n\t\t}\n\t\telse {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\n\t\tthis.trigger( 'childview:change:selected', this );\n\t},\n\n\t/**\n\t * @var {RelationshipCollection} this.collection\n\t *\n\t * @returns {boolean} true if unlimited selections are allowed or we're below the selection limit\n\t */\n\tvalidateSelectionLimit: function () {\n\t\tlet limit, numSelected;\n\n\t\tlimit = +this.fieldConfig.pick_limit;  // Unary plus will implicitly cast to number\n\t\tnumSelected = this.collection.filterBySelected().length;\n\n\t\tif ( 0 === limit || numSelected < limit ) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitOver: function () {\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\t\t\t// At the limit: disable all unselected items so no further selections can be added\n\t\t\tthis.$el.find( 'option:not(:selected)' ).prop( 'disabled', true );\n\t\t}\n\n\t\tthis.trigger( 'childview:selection:limit:over', this );\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitUnder: function () {\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\t\t\t// Not at limit, make sure all items are enabled\n\t\t\tthis.$el.find( 'option' ).prop( 'disabled', false );\n\t\t}\n\n\t\tthis.trigger( 'childview:selection:limit:under', this );\n\t},\n\n\t/**\n\t * No filtering, by default.  Consuming views can override this function to provide custom filtering\n\t * (e.g. List View needs to filter items already selected for its select from existing list)\n\t *\n\t * @param data\n\t */\n\tfilterAjaxList: function ( data ) {\n\t\tconst selectedItems = this.collection.filterBySelected();\n\t\tconst returnList = [];\n\n\t\t_.each( data.results, function ( element, index, list ) {\n\t\t\telement.text = element.name; // Select2 needs the \"text\" key but our model uses \"name\"\n\n\t\t\t// Only keep choices that haven't been selected yet, we don't want selected items in the autoselect portion\n\t\t\tif ( !selectedItems.get( element.id ) ) {\n\t\t\t\treturnList.push( element );\n\t\t\t}\n\t\t} );\n\n\t\treturn { 'results': returnList };\n\t},\n\n\t/**\n\t * Initialize Select2, setup drag-drop reordering\n\t */\n\tsetupSelect2: function () {\n\t\tconst self = this;\n\t\tconst $select2 = this.$el;\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\t\tconst ajaxData = fieldConfig.ajax_data;\n\t\tconst select2Overrides = fieldConfig.select2_overrides;\n\t\tconst limit = fieldConfig.pick_limit;\n\t\tconst isSingle = ( 'single' === fieldConfig.pick_format_type );\n\t\tconst selectedCount = this.collection.filterBySelected().length;\n\t\tlet $ulContainer, select2Options, placeholder;\n\n\t\t// 'placeholder' for single select requires an empty option.  None of the examples set selected but\n\t\t// it did not work for me in testing with just an empty option like the examples.\n\t\t//\n\t\t// https://select2.org/placeholders#single-select-placeholders\n\t\t// https://github.com/select2/select2/issues/3553\n\t\tif ( 0 === selectedCount && isSingle ) {\n\t\t\t$select2.prepend( '<option selected=\"selected\">' );\n\t\t}\n\n\t\t// ToDo:\n\t\t// limitDisable is only used to control the List View's select2 component, it won't be set\n\t\t// for regular autocomplete.  This function should be generic and not have to poke around with\n\t\t// special properties like this for exception cases.\n\t\tif ( fieldConfig.limitDisable ) {\n\t\t\tplaceholder = `${PodsI18n.__( 'You can only select' )} ${sprintf( PodsI18n._n( '%s item', '%s items', limit ), limit )}`;\n\t\t}\n\t\telse {\n\t\t\tplaceholder = `${PodsI18n.__( 'Search' )} ${fieldConfig.label}...`;\n\t\t}\n\n\t\tselect2Options = {\n\t\t\tmaximumSelectionLength: isSingle ? undefined : limit, // Should not be set for single select, messes up placeholder\n\t\t\tplaceholder           : placeholder,\n\t\t\tallowClear            : isSingle,\n\t\t\tdisabled              : fieldConfig.limitDisable,\n\t\t\ttags                  : fieldConfig.pick_taggable,\n\t\t\tescapeMarkup          : function ( text ) { return text; }\n\t\t};\n\n\t\tif ( ajaxData.ajax ) {\n\t\t\tjQuery.extend( select2Options, {\n\t\t\t\tminimumInputLength: ajaxData.minimum_input_length,\n\t\t\t\tajax              : {\n\t\t\t\t\turl           : ajaxurl + '?pods_ajax=1',\n\t\t\t\t\ttype          : 'POST',\n\t\t\t\t\tdataType      : 'json',\n\t\t\t\t\tdelay         : ajaxData.delay,\n\t\t\t\t\tdata          : function ( params ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t_wpnonce: ajaxData._wpnonce,\n\t\t\t\t\t\t\taction  : 'pods_relationship',\n\t\t\t\t\t\t\tmethod  : 'select2',\n\t\t\t\t\t\t\tpod     : ajaxData.pod,\n\t\t\t\t\t\t\tfield   : ajaxData.field,\n\t\t\t\t\t\t\turi     : ajaxData.uri,\n\t\t\t\t\t\t\tid      : ajaxData.id,\n\t\t\t\t\t\t\tquery   : params.term // ToDo: term{lang}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tprocessResults: function ( data, params ) {\n\t\t\t\t\t\treturn self.filterAjaxList( data, params );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Initialize select2\n\t\t$select2.selectWoo( jQuery.extend( true, select2Options, select2Overrides ) );\n\n\t\t// Get a reference to the ul container of the visual UI portion.  Can't do this until select2 is initialized\n\t\t$ulContainer = $select2.parent().find( SELECT2_UL_TARGET );\n\n\t\t// Make the list drag-drop sortable\n\t\t$ulContainer.sortable( {\n\t\t\tcontainment: 'parent'\n\t\t} );\n\n\t\t// With select2 4.0, sortable is just reordering the UI elements.  Keep the underlying select/option list\n\t\t// synced with the changes.  See: https://github.com/select2/select2/issues/3004\n\t\t$ulContainer.on( 'sortstop', function () {\n\t\t\tconst $selected = $ulContainer.find( SELECT2_SELECTED_TARGET ).get().reverse();\n\n\t\t\tjQuery( $selected ).each( function () {\n\t\t\t\tconst id = jQuery( this ).data( 'data' ).id;\n\t\t\t\tconst option = $select2.find( 'option[value=\"' + id + '\"]' )[ 0 ];\n\n\t\t\t\t$select2.prepend( option );\n\t\t\t} );\n\t\t} );\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/list-item.html';\n\nimport {PodsFieldListView, PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const ListItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\tclassName: 'pods-dfv-list-item pods-relationship',\n\n\ttemplate: _.template( template ),\n\n\tui: {\n\t\tremoveButton: '.pods-dfv-list-remove a',\n\t\teditButton  : '.pods-dfv-list-edit a'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'remove:item:click',\n\t\t'click @ui.editButton'  : 'edit:item:click'\n\t},\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model )\n\t\t};\n\t}\n\n} );\n\n/**\n *  Represents the markup of the container as a whole\n */\nexport const ListView = PodsFieldListView.extend( {\t// Cache the template function for the overall container\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list pods-relationship',\n\n\tchildView: ListItem,\n\n\t// Pass these up the containment chain\n\tchildViewTriggers: {\n\t\t'remove:item:click': 'childview:remove:item:click',\n\t\t'edit:item:click'  : 'childview:edit:item:click'\n\t},\n\n\tfilter: function ( child, index, collection ) {\n\t\treturn child.attributes.selected;\n\t},\n\n\tonAttach: function () {\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\n\t\t// @todo\n\t\t// http://stackoverflow.com/questions/1735372/jquery-sortable-list-scroll-bar-jumps-up-when-sorting/4187833#4187833\n\n\t\tif ( 1 !== fieldConfig[ 'pick_limit' ] ) {\n\t\t\t// init sortable\n\t\t\tthis.$el.sortable( {\n\t\t\t\tcontainment      : 'parent',\n\t\t\t\taxis             : 'y',\n\t\t\t\tscrollSensitivity: 40,\n\t\t\t\ttolerance        : 'pointer',\n\t\t\t\topacity          : 0.6\n\t\t\t} );\n\t\t}\n\t}\n\n} );","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/add-new.html';\n\nimport {PodsFieldView} from 'pods-dfv/_src/core/pods-field-views';\n\nconst DISABLED_CLASS = 'button-disabled';\n\nexport const AddNew = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'div',\n\n\tclassName: 'podsform-dfv-list-relationship-container',\n\n\tui: {\n\t\taddButton: 'a.pods-related-add-new'\n\t},\n\n\ttemplate: _.template( template ),\n\n\ttriggers: {\n\t\t'click @ui.addButton': 'add:new:click'\n\t},\n\n\t/**\n\t *\n\t */\n\tdisable: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\t\taddButton.addClass( DISABLED_CLASS ); // Note: this just styles the link (button), click event enforces\n\t},\n\n\t/**\n\t *\n\t */\n\tenable: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\t\taddButton.removeClass( DISABLED_CLASS ); // Note: this just styles the link (button), click event enforces\n\t},\n\n\t/**\n\t *\n\t */\n\tonAddNewClick: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\n\t\t// Only pass the event up the view chain if we're enabled\n\t\tif ( ! addButton.hasClass( DISABLED_CLASS ) ) {\n\t\t\tthis.trigger( 'childview:add:new', this );\n\t\t}\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\nimport template from 'pods-dfv/_src/pick/pick-layout.html';\n\nimport {PodsDFVFieldModel} from 'pods-dfv/_src/core/pods-field-model';\nimport {PodsDFVFieldLayout} from 'pods-dfv/_src/core/pods-field-views';\n\nimport {IframeFrame} from 'pods-dfv/_src/core/iframe-frame';\n\nimport {RelationshipCollection} from 'pods-dfv/_src/pick/relationship-model';\nimport {PickFieldModel} from 'pods-dfv/_src/pick/pick-field-model';\n\nimport {RadioView} from 'pods-dfv/_src/pick/views/radio-view';\nimport {CheckboxView} from 'pods-dfv/_src/pick/views/checkbox-view';\nimport {SelectView} from 'pods-dfv/_src/pick/views/select-view';\nimport {ListView} from 'pods-dfv/_src/pick/views/list-view';\nimport {AddNew} from 'pods-dfv/_src/pick/views/add-new';\n\nconst AJAX_ADD_NEW_ACTION = 'pods_relationship_popup';\n\nconst views = {\n\t'checkbox': CheckboxView,\n\t'select'  : SelectView,\n\t'select2' : SelectView,  // SelectView handles select2 as well\n\t'radio'   : RadioView,\n\t'list'    : ListView\n};\n\nlet modalIFrame;\n\n/**\n * @extends Backbone.View\n */\nexport const Pick = PodsDFVFieldLayout.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttemplate: _.template( template ),\n\n\tregions: {\n\t\tautocomplete: '.pods-ui-list-autocomplete',\n\t\tlist        : '.pods-pick-values',\n\t\taddNew      : '.pods-ui-add-new'\n\t},\n\n\tchildViewEvents: {\n\t\t'childview:remove:item:click'    : 'onChildviewRemoveItemClick',\n\t\t'childview:edit:item:click'      : 'onChildviewEditItemClick',\n\t\t'childview:selection:limit:over' : 'onChildviewSelectionLimitOver',\n\t\t'childview:selection:limit:under': 'onChildviewSelectionLimitUnder',\n\t\t'childview:change:selected'      : 'onChildviewChangeSelected',\n\t\t'childview:add:new'              : 'onChildviewAddNew'\n\t},\n\n\t/**\n\t *\n\t */\n\tonBeforeRender: function () {\n\t\tif ( this.collection === undefined ) {\n\t\t\tthis.collection = new RelationshipCollection( this.fieldItemData );\n\t\t}\n\t},\n\n\t/**\n\t *\n\t */\n\tonRender: function () {\n\t\tthis.fieldConfig = new PickFieldModel( this.model.get( 'fieldConfig' ) );\n\n\t\t// Add New?\n\t\tif ( '' !== this.fieldConfig.get( 'iframe_src' ) && 1 == this.fieldConfig.get( 'pick_allow_add_new' ) ) {\n\t\t\tthis.showAddNew();\n\t\t}\n\n\t\t// Autocomplete?\n\t\tif ( 'list' === this.fieldConfig.get( 'view_name' ) ) {\n\t\t\tthis.buildAutocomplete();\n\t\t}\n\n\t\t// Build the list last, events fired by the list (like selection limit) may impact state in other views we manage\n\t\tthis.showList();\n\t},\n\n\t/**\n\t * This is for the List View's autocomplete for select from existing\n\t */\n\tbuildAutocomplete: function () {\n\t\tlet fieldConfig, model, collection, view;\n\t\tconst pick_limit = +this.fieldConfig.get( 'pick_limit' ); // Unary plus forces cast to number\n\n\t\tfieldConfig = {\n\t\t\tview_name         : 'select2',\n\t\t\tpick_format_type  : 'multi',\n\t\t\tselectFromExisting: true,\n\t\t\tajax_data         : this.fieldConfig.get( 'ajax_data' ),\n\t\t\tselect2_overrides : this.fieldConfig.get( 'select2_overrides' ),\n\t\t\tlabel             : this.fieldConfig.get( 'label' ),\n\t\t\tpick_limit        : pick_limit\n\t\t};\n\n\t\t// The autocomplete portion of List View doesn't track selected items; disable if we're at the selection limit\n\t\tif ( this.collection.filterBySelected().length >= pick_limit && 0 !== pick_limit ) {\n\n\t\t\tfieldConfig.limitDisable = true;\n\t\t\tthis.onChildviewSelectionLimitOver();\n\n\t\t} else {\n\n\t\t\tthis.onChildviewSelectionLimitUnder();\n\t\t}\n\n\t\tmodel = new PodsDFVFieldModel( { fieldConfig: fieldConfig } );\n\t\tcollection = this.collection.filterByUnselected();\n\t\tview = new SelectView( { collection: collection, fieldModel: model } );\n\n\t\t// Provide a custom list filter for the autocomplete portion's AJAX data lists\n\t\tview.filterAjaxList = this.filterAjaxList.bind( this );\n\n\t\t// Destroy any existing view and rebuild from scratch\n\t\tif ( this.getChildView( 'autocomplete' ) ) {\n\t\t\tthis.getChildView( 'autocomplete' ).destroy();\n\t\t}\n\n\t\tthis.showChildView( 'autocomplete', view );\n\t},\n\n\t/**\n\t *\n\t */\n\tshowList: function () {\n\t\tlet viewName, View, list;\n\n\t\t// Setup the view to be used\n\t\tviewName = this.fieldConfig.get( 'view_name' );\n\t\tif ( views[ viewName ] === undefined ) {\n\t\t\tthrow new Error( `Invalid view name \"${viewName}\"` );\n\t\t}\n\t\tView = views[ viewName ];\n\t\tlist = new View( { collection: this.collection, fieldModel: this.model } );\n\n\t\tthis.showChildView( 'list', list );\n\t},\n\n\t/**\n\t *\n\t */\n\tshowAddNew: function () {\n\t\tlet addNew = new AddNew( { fieldModel: this.model } );\n\t\tthis.showChildView( 'addNew', addNew );\n\t},\n\n\t/**\n\t * List Views need to filter items already selected from their select from existing list.  The AJAX function\n\t * itself does not filter.\n\t *\n\t * @param data\n\t */\n\tfilterAjaxList: function ( data ) {\n\t\tconst selectedItems = this.collection.filterBySelected();\n\t\tconst returnList = [];\n\n\t\t// Loop through the items returned via ajax\n\t\t_.each( data.results, function ( element, index, list ) {\n\t\t\telement.text = element.name; // Select2 needs the \"text\" key but our model uses \"name\"\n\n\t\t\t// Only keep choices that haven't been selected yet, we don't want selected items in the autoselect portion\n\t\t\tif ( !selectedItems.get( element.id ) ) {\n\t\t\t\treturnList.push( element );\n\t\t\t}\n\t\t} );\n\n\t\t// The collection may be partial in ajax mode, make sure we add any items we didn't yet have\n\t\tthis.collection.add( returnList );\n\t\tthis.getChildView( 'autocomplete' ).setCollection( this.collection.filterByUnselected() );\n\n\t\treturn { 'results': returnList };\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewSelectionLimitOver: function ( childView ) {\n\t\tconst addNew = this.getChildView( 'addNew' );\n\t\tif ( addNew ) {\n\t\t\taddNew.disable();\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewSelectionLimitUnder: function ( childView ) {\n\t\tconst addNew = this.getChildView( 'addNew' );\n\t\tif ( addNew ) {\n\t\t\taddNew.enable();\n\t\t}\n\t},\n\n\t/**\n\t * \"Remove\" in list view just toggles an item's selected attribute\n\t *\n\t * @param childView\n\t */\n\tonChildviewRemoveItemClick: function ( childView ) {\n\t\tchildView.model.toggleSelected();\n\t\tthis.getChildView( 'list' ).render();\n\n\t\t// Keep autocomplete in sync, removed items should now be available choices\n\t\tif ( 'list' === this.fieldConfig.get( 'view_name' ) ) {\n\t\t\tthis.buildAutocomplete();\n\t\t}\n\t},\n\n\t/**\n\t * @param childView\n\t */\n\tonChildviewAddNew: function ( childView ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\n\t\tmodalIFrame = new IframeFrame( {\n\t\t\ttitle: fieldConfig.iframe_title_add,\n\t\t\tsrc  : fieldConfig.iframe_src\n\t\t} );\n\n\t\tthis.setModalListeners();\n\t\tmodalIFrame.modal.open();\n\t},\n\n\t/**\n\t * @param childView\n\t */\n\tonChildviewEditItemClick: function ( childView ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\n\t\tmodalIFrame = new IframeFrame( {\n\t\t\ttitle: fieldConfig.iframe_title_edit,\n\t\t\tsrc  : childView.ui.editButton.attr( 'href' )\n\t\t} );\n\n\t\tthis.setModalListeners();\n\t\tmodalIFrame.modal.open();\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewChangeSelected: function ( childView ) {\n\n\t\t// Refresh the autocomplete and List View lists on autocomplete selection\n\t\tif ( childView.fieldConfig.selectFromExisting ) {\n\t\t\tthis.buildAutocomplete();\n\t\t\tthis.getChildView( 'list' ).render();\n\t\t}\n\t},\n\n\tsetModalListeners: function() {\n\t\tjQuery( window ).on( 'dfv:modal:update', this.modalSuccess.bind( this ) );\n\t\tjQuery( window ).on( 'dfv:modal:cancel', this.modalCancel.bind( this ) );\n\t},\n\n\tclearModalListeners: function() {\n\t\tjQuery( window ).off( 'dfv:modal:update' );\n\t\tjQuery( window ).off( 'dfv:modal:cancel' );\n\t},\n\n\t/**\n\t * @param event\n\t * @param data\n\t */\n\tmodalSuccess: function ( event, data ) {\n\t\tconst itemModel = this.collection.get( data.id );\n\n\t\tif ( itemModel ) {\n\t\t\t// Edit: update an existing model and force a re-render\n\t\t\titemModel.set( data );\n\t\t\tthis.getChildView( 'list' ).render();\n\t\t}\n\t\telse {\n\t\t\t// Add new: create a new model in the collection\n\t\t\tthis.collection.add( data );\n\t\t}\n\n\t\tthis.clearModalListeners();\n\t\tmodalIFrame.modal.close( {} );\n\t},\n\n\t/**\n\t *\n\t */\n\tmodalCancel: function() {\n\t\tthis.clearModalListeners();\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette */\nimport {PodsDFVFieldModel} from 'pods-dfv/_src/core/pods-field-model';\n\nimport * as fields from 'pods-dfv/_src/field-manifest';\n\n// jQuery selector for inline scripts with field definitions\nconst SCRIPT_TARGET = 'script.pods-dfv-field-data';\n\n// key: FieldClass\nconst FieldClasses = {\n\t'file': fields.FileUpload,\n\t'avatar': fields.FileUpload,\n\t'pick': fields.Pick\n};\n\n/**\n * Custom jQuery plugin to handle Pods MV Fields\n *\n * @param {Object} fields Object to which new fields will be added, in { fieldId: fieldInstance } format\n */\nexport const PodsDFVInit = function ( fields ) {\n\n\treturn this.each( function () {\n\t\tlet data, FieldClass, newField, fieldModel;\n\n\t\tdata = { fieldType: '' };\n\n\t\t// Combine data from all in-line data scripts in the container\n\t\tjQuery( this ).find( SCRIPT_TARGET ).each( function () {\n\t\t\t\tconst thisData = jQuery.parseJSON( jQuery( this ).html() );\n\t\t\t\tjQuery.extend( data, thisData );\n\t\t\t\tjQuery( this ).remove();\n\t\t\t}\n\t\t);\n\n\t\t// Ignore anything that doesn't have the field type set\n\t\tif ( data.fieldType !== undefined ) {\n\n\t\t\t// Lookup the class to instantiate by key\n\t\t\tFieldClass = FieldClasses[ data.fieldType ];\n\n\t\t\tif ( FieldClass !== undefined ) {\n\t\t\t\t// Assemble the model\n\t\t\t\tfieldModel = new PodsDFVFieldModel( {\n\t\t\t\t\thtmlAttr   : data.htmlAttr,\n\t\t\t\t\tfieldConfig: data.fieldConfig\n\t\t\t\t} );\n\n\t\t\t\tnewField = new FieldClass( {\n\t\t\t\t\tel           : this,\n\t\t\t\t\tmodel        : fieldModel,\n\t\t\t\t\tfieldItemData: data.fieldItemData\n\t\t\t\t} );\n\n\t\t\t\t// Render the field, stash a reference, trigger an event for the outside world\n\t\t\t\tnewField.render();\n\t\t\t\tfields[ data.htmlAttr.id ] = newField;\n\t\t\t\tjQuery( this ).trigger( 'render' );\n\t\t\t}\n\t\t}\n\t} );\n};","/*global jQuery, _, Backbone, Marionette */\nimport {PodsDFVInit} from 'pods-dfv/_src/pods-dfv-init'; // jQuery plugin\n\nimport * as fields from 'pods-dfv/_src/field-manifest';\nimport * as models from 'pods-dfv/_src/model-manifest';\n\nconst PodsDFV = {\n\tfields        : fields,\n\tmodels        : models,\n\tfieldInstances: {}\n};\nexport default PodsDFV;\n\n/**\n * This is the workhorse that currently kicks everything off\n */\njQuery.fn.PodsDFVInit = PodsDFVInit;\njQuery( function () {\n\tjQuery( '.pods-form-ui-field' ).PodsDFVInit( PodsDFV.fieldInstances );\n} );"],"names":["PodsDFVFieldModel","Backbone","Model","extend","PodsFieldListView","Marionette","CollectionView","options","fieldModel","childViewOptions","PodsFieldView","View","this","data","model","toJSON","htmlAttr","get","fieldConfig","PodsDFVFieldLayout","fieldItemData","FileUploadModel","FileUploadCollection","Collection","FileUploadItem","_","template","FileUploadList","sort_axis","$el","sortable","FileUploadForm","PodsFileUploader","Object","browseButton","uiRegion","call","FileUploadQueueModel","FileUploadQueueItem","render","FileUploadQueue","Uploaders","plupload","Uploader","init","bind","onFilesAdded","onUploadProgress","onFileUploaded","up","files","collection","view","each","index","file","id","name","add","reset","show","queueCollection","refresh","start","set","progress","percent","resp","response","newFile","json","substr","window","console","log","jQuery","text","match","length","parseJSON","isEmptyObject","PodsI18n","__","ID","thumbnail","post_title","edit_link","link","download","trigger","undefined","wp","defaults","filters","mime_types","title","extensions","defaultExt","mediaObject","media","once","onMediaSelect","open","content","mode","selection","state","newFiles","attachment","sizes","attributes","attachmentThumbnail","icon","url","full","push","editLink","FileUpload","listView","formView","showChildView","uploader","createUploader","listenTo","onAddedFiles","childView","remove","invoke","fileLimit","newCollection","filteredModels","clone","models","filter","indexOf","targetUploader","thisUploader","prototype","fileUploader","getRegion","getEl","PodsDFVModal","Modal","retVal","close","apply","escape","parent","IframeFrame","Frame","initialize","arguments","addClass","initState","initModal","on","iframeContent","iframe","createTitle","append","src","states","controller","State","modal","setState","Iframe","RelationshipModel","RelationshipCollection","ids","map","thisModel","selected","contains","filtered","itemModel","PickFieldModel","RadioItem","RadioView","CheckboxItem","CheckboxView","validateSelectionLimit","selectionLimitOver","toggleSelected","selectionLimitUnder","limit","numSelected","pick_limit","filterBySelected","find","prop","SelectItem","val","html","Optgroup","SelectView","item","optgroup","returnOptions","pick_format_type","class","name_clean","view_name","format_type","setupSelect2","multiLastValidSelection","alert","sprintf","_n","setSelected","selectedItems","returnList","results","element","list","self","$select2","ajaxData","ajax_data","select2Overrides","select2_overrides","isSingle","$ulContainer","select2Options","placeholder","prepend","limitDisable","label","pick_taggable","ajax","minimum_input_length","ajaxurl","delay","params","_wpnonce","pod","field","uri","term","filterAjaxList","selectWoo","$selected","reverse","option","ListItem","ListView","child","AddNew","getUI","removeClass","hasClass","views","modalIFrame","Pick","showAddNew","buildAutocomplete","showList","onChildviewSelectionLimitOver","onChildviewSelectionLimitUnder","filterByUnselected","getChildView","destroy","viewName","Error","addNew","setCollection","disable","enable","iframe_title_add","iframe_src","setModalListeners","iframe_title_edit","ui","editButton","attr","selectFromExisting","modalSuccess","modalCancel","off","event","clearModalListeners","FieldClasses","fields","PodsDFV","fn","PodsDFVInit","FieldClass","newField","fieldType","thisData","fieldInstances"],"mappings":"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"}