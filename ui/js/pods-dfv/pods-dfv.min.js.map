{"version":3,"file":"pods-dfv.min.js","sources":["_src/core/pods-field-model.js","_src/core/renderers/mn-renderer.js","_src/core/pods-field-views.js","_src/file-upload/file-upload-model.js","_src/file-upload/views/file-upload-list.js","_src/file-upload/views/file-upload-form.js","_src/file-upload/uploaders/pods-file-uploader.js","_src/file-upload/views/file-upload-queue.js","_src/file-upload/file-upload.js","_src/file-upload/uploaders/plupload.js","_src/file-upload/uploaders/media-modal.js","_src/core/dfv-modal.js","_src/core/iframe-frame.js","_src/pick/relationship-model.js","_src/pick/pick-field-model.js","_src/pick/views/radio-view.js","_src/pick/views/checkbox-view.js","_src/pick/views/select-view.js","_src/pick/views/list-view.js","_src/pick/views/add-new.js","_src/pick/pick.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","_src/text/text.js","_src/pods-dfv.js","_src/core/renderers/react-renderer.js"],"sourcesContent":["/*global jQuery, _, Backbone, Marionette */\nexport const PodsDFVFieldModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\thtmlAttr: {},\n\t\tfieldConfig: {}\n\t}\n} );\n","import jQuery from 'jquery';\nimport { PodsDFVFieldModel } from 'pods-dfv/_src/core/pods-field-model.js';\n\nexport function mnRenderer ( FieldClass, element, data ) {\n\n\t// Assemble the model and create the field\n\tconst fieldModel = new PodsDFVFieldModel( {\n\t\thtmlAttr: data.htmlAttr,\n\t\tfieldConfig: data.fieldConfig\n\t} );\n\n\tconst newField = new FieldClass( {\n\t\tel: element,\n\t\tmodel: fieldModel,\n\t\tfieldItemData: data.fieldItemData\n\t} );\n\n\t// Render the field, trigger an event for the outside world, and stash a reference\n\tnewField.render();\n\tjQuery( element ).trigger( 'render' );\n\treturn newField;\n}\n","/*global jQuery, _, Backbone, Marionette */\n\n/**\n *\n */\nexport const PodsFieldListView = Marionette.CollectionView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tinitialize: function ( options ) {\n\t\tthis.fieldModel = options.fieldModel;\n\t\tthis.childViewOptions = { fieldModel: options.fieldModel };\n\t}\n} );\n\n/**\n * @extends Backbone.View\n */\nexport const PodsFieldView = Marionette.View.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tserializeData: function () {\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tlet data = this.model ? this.model.toJSON() : {};\n\n\t\tdata.htmlAttr = fieldModel.get( 'htmlAttr' );\n\t\tdata.fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\treturn data;\n\t}\n} );\n\n/**\n * Top-level \"main field container\"\n */\nexport const PodsDFVFieldLayout = Marionette.View.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\tinitialize: function ( options ) {\n\t\tthis.fieldItemData = options.fieldItemData;\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n/**\n *\n */\nexport const FileUploadModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t'id': 0,\n\t\t'icon': '',\n\t\t'name': '',\n\t\t'edit_link': '',\n\t\t'link': '',\n\t\t'download': ''\n\t}\n} );\n\n/**\n *\n */\nexport const FileUploadCollection = Backbone.Collection.extend( {\n\tmodel: FileUploadModel\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-item.html';\n\nimport { PodsFieldListView, PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n * Individual list items, representing a single file\n */\nexport const FileUploadItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tclassName: 'pods-dfv-list-item',\n\n\tui: {\n\t\tdragHandle: '.pods-dfv-list-handle',\n\t\teditLink: '.pods-dfv-list-edit-link',\n\t\tviewLink: '.pods-dfv-list-link',\n\t\tdownloadLink: '.pods-dfv-list-download',\n\t\tremoveButton: '.pods-dfv-list-remove',\n\t\titemName: '.pods-dfv-list-name'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'remove:file:click'\n\t}\n} );\n\n/**\n * The file list container\n */\nexport const FileUploadList = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list',\n\n\tchildView: FileUploadItem,\n\n\tchildViewTriggers: {\n\t\t'remove:file:click': 'childview:remove:file:click'\n\t},\n\n\tonAttach: function () {\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\t\tlet sort_axis = 'y';\n\n\t\t// @todo\n\t\t// http://stackoverflow.com/questions/1735372/jquery-sortable-list-scroll-bar-jumps-up-when-sorting/4187833#4187833\n\n\t\tif ( 1 != fieldConfig[ 'file_limit' ] ) {\n\n\t\t\tif ( 'tiles' == fieldConfig[ 'file_field_template' ] ) {\n\t\t\t\tsort_axis = '';\n\t\t\t}\n\n\t\t\t// init sortable\n\t\t\tthis.$el.sortable( {\n\t\t\t\tcontainment: 'parent',\n\t\t\t\taxis: sort_axis,\n\t\t\t\tscrollSensitivity: 40,\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\topacity: 0.6\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-form.html';\n\nimport { PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\nexport const FileUploadForm = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'div',\n\n\ttemplate: _.template( template ),\n\n\tui: {\n\t\taddButton: '.pods-dfv-list-add'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.addButton': 'childview:add:file:click'\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n/**\n *\n * @param {Object} options\n *\n * @param {Object} options.browseButton   Existing and attached DOM node\n * @param {Object} options.uiRegion       Marionette.Region object\n * @param {Object} options.fieldConfig\n *\n * @param {string} options.fieldConfig.file_modal_title\n * @param {string} options.fieldConfig.file_modal_add_button\n * @param {string} options.fieldConfig.file_limit\n * @param {string} options.fieldConfig.limit_extensions\n * @param {string} options.fieldConfig.limit_types\n * @param {string} options.fieldConfig.file_attachment_tab\n *\n * @param {Object} options.fieldConfig.plupload_init\n * @param {Object} options.fieldConfig.plupload_init.browse_button\n *\n * @class\n */\nexport const PodsFileUploader = Marionette.Object.extend( {\n\n\tconstructor: function ( options ) {\n\t\t// Magically set the object properties we need, they'll just \"be there\" for the concrete instance\n\t\tthis.browseButton = options.browseButton;\n\t\tthis.uiRegion = options.uiRegion;\n\t\tthis.fieldConfig = options.fieldConfig;\n\n\t\tMarionette.Object.call( this, options );\n\t}\n\n} );\n\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/file-upload/views/file-upload-queue.html';\n\nexport const FileUploadQueueModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\tid: 0,\n\t\tfilename: '',\n\t\tprogress: 0,\n\t\terrorMsg: ''\n\t}\n} );\n\n/**\n *\n */\nexport const FileUploadQueueItem = Marionette.View.extend( {\n\tmodel: FileUploadQueueModel,\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tattributes: function () {\n\t\treturn {\n\t\t\tclass: 'pods-dfv-list-item',\n\t\t\tid: this.model.get( 'id' )\n\t\t};\n\t},\n\n\tmodelEvents: {\n\t\t'change': 'onModelChanged'\n\t},\n\n\tonModelChanged: function () {\n\t\tthis.render();\n\t}\n\n} );\n\n/**\n *\n */\nexport const FileUploadQueue = Marionette.CollectionView.extend( {\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list pods-dfv-list-queue',\n\n\tchildView: FileUploadQueueItem\n} );\n","/*global jQuery, _, Backbone, Marionette */\nimport template from 'pods-dfv/_src/file-upload/file-upload-layout.html';\n\nimport { PodsDFVFieldLayout } from 'pods-dfv/_src/core/pods-field-views';\n\nimport { FileUploadCollection } from 'pods-dfv/_src/file-upload/file-upload-model';\n\nimport { FileUploadList } from 'pods-dfv/_src/file-upload/views/file-upload-list';\nimport { FileUploadForm } from 'pods-dfv/_src/file-upload/views/file-upload-form';\n\nimport { Plupload } from 'pods-dfv/_src/file-upload/uploaders/plupload';\nimport { MediaModal } from 'pods-dfv/_src/file-upload/uploaders/media-modal';\n\nconst Uploaders = [\n\tPlupload,\n\tMediaModal\n];\n\nconst UNLIMITED_FILES = 0;\n\n/**\n * @extends Backbone.View\n */\nexport const FileUpload = PodsDFVFieldLayout.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttemplate: _.template( template ),\n\n\tregions: {\n\t\tlist: '.pods-ui-file-list',\n\t\tuiRegion: '.pods-ui-region', // \"Utility\" container for uploaders to use\n\t\tform: '.pods-ui-form'\n\t},\n\n\tchildViewEvents: {\n\t\t'childview:remove:file:click': 'onChildviewRemoveFileClick',\n\t\t'childview:add:file:click': 'onChildviewAddFileClick'\n\t},\n\n\tuploader: {},\n\n\t/**\n\t *\n\t */\n\tonBeforeRender: function () {\n\t\tif ( this.collection === undefined ) {\n\t\t\tthis.collection = new FileUploadCollection( this.fieldItemData );\n\t\t}\n\t},\n\n\tonRender: function () {\n\t\tconst listView = new FileUploadList( { collection: this.collection, fieldModel: this.model } );\n\t\tconst formView = new FileUploadForm( { fieldModel: this.model } );\n\n\t\tthis.showChildView( 'list', listView );\n\t\tthis.showChildView( 'form', formView );\n\n\t\t// Setup the uploader and listen for a response event\n\t\tthis.uploader = this.createUploader();\n\t\tthis.listenTo( this.uploader, 'added:files', this.onAddedFiles );\n\t},\n\n\t/**\n\t * Fired by a remove:file:click trigger in any child view\n\t *\n\t * @param childView View that was the source of the event\n\t */\n\tonChildviewRemoveFileClick: function ( childView ) {\n\t\tthis.collection.remove( childView.model );\n\t},\n\n\t/**\n\t * Fired by a add:file:click trigger in any child view\n\t *\n\t * plupload fields should never generate this event, it places a shim over our button and handles the\n\t * event internally.  But this event does still come through with plupload fields in some browser\n\t * environments for reasons we've been unable to determine.\n\t */\n\tonChildviewAddFileClick: function () {\n\n\t\t// Invoke the uploader\n\t\tif ( 'function' === typeof this.uploader.invoke ) {\n\t\t\tthis.uploader.invoke();\n\t\t}\n\t},\n\n\t/**\n\t * Concrete uploader implementations simply need to: this.trigger( 'added:files', newFiles )\n\t *\n\t * @param {Object[]} data An array of model objects to be added\n\t */\n\tonAddedFiles: function ( data ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\t\tconst fileLimit = +fieldConfig[ 'file_limit' ]; // Unary plus to force to number\n\t\tlet newCollection, filteredModels;\n\n\t\t// Get a copy of the existing collection with the new files added\n\t\tnewCollection = this.collection.clone();\n\t\tnewCollection.add( data );\n\n\t\t// Enforce the file limit option if one is set\n\t\tif ( UNLIMITED_FILES === fileLimit ) {\n\t\t\tfilteredModels = newCollection.models;\n\t\t} else {\n\t\t\t// Number of uploads is limited: keep the last N models, FIFO/queue style\n\t\t\tfilteredModels = newCollection.filter( function ( model ) {\n\t\t\t\treturn ( newCollection.indexOf( model ) >= newCollection.length - fileLimit );\n\t\t\t} );\n\t\t}\n\n\t\tthis.collection.reset( filteredModels );\n\t},\n\n\tcreateUploader: function () {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\t\tconst targetUploader = fieldConfig[ 'file_uploader' ];\n\t\tlet Uploader;\n\n\t\tjQuery.each( Uploaders, function ( index, thisUploader ) {\n\t\t\tif ( targetUploader === thisUploader.prototype.fileUploader ) {\n\t\t\t\tUploader = thisUploader;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\tif ( Uploader !== undefined ) {\n\t\t\tthis.uploader = new Uploader( {\n\t\t\t\t// We provide regular DOM element for the button\n\t\t\t\tbrowseButton: this.getRegion( 'form' ).getEl( '.pods-dfv-list-add' ).get(),\n\t\t\t\tuiRegion: this.getRegion( 'uiRegion' ),\n\t\t\t\tfieldConfig: fieldConfig\n\t\t\t} );\n\t\t\treturn this.uploader;\n\t\t} else {\n\t\t\t// @todo sprintf type with PodsI18n.__()\n\t\t\tthrow `Could not locate file uploader '${targetUploader}'`;\n\t\t}\n\t}\n} );\n","/* eslint-disable camelcase */\n/*global jQuery, _, Backbone, Marionette, wp, plupload, PodsI18n */\nimport { PodsFileUploader } from 'pods-dfv/_src/file-upload/uploaders/pods-file-uploader';\nimport { FileUploadQueueModel, FileUploadQueue } from 'pods-dfv/_src/file-upload/views/file-upload-queue';\n\nexport const Plupload = PodsFileUploader.extend( {\n\tplupload: {},\n\n\tfileUploader: 'plupload',\n\n\tinitialize: function () {\n\t\t// Set the browse button argument for plupload... it's required\n\t\tthis.fieldConfig[ 'plupload_init' ][ 'browse_button' ] = this.browseButton;\n\n\t\tthis.plupload = new plupload.Uploader( this.fieldConfig[ 'plupload_init' ] );\n\t\tthis.plupload.init();\n\n\t\t// Setup all callbacks: ( event_name, callback, context )\n\t\tthis.plupload.bind( 'FilesAdded', this.onFilesAdded, this );\n\t\tthis.plupload.bind( 'UploadProgress', this.onUploadProgress, this );\n\t\tthis.plupload.bind( 'FileUploaded', this.onFileUploaded, this );\n\t},\n\n\t/**\n\t * Fired after files have been selected from the dialog\n\t *\n\t * @param up\n\t * @param files\n\t */\n\tonFilesAdded: function ( up, files ) {\n\t\tlet model,\n\t\t\tcollection,\n\t\t\tview;\n\n\t\t// Assemble the collection data for the file queue\n\t\tcollection = new Backbone.Collection();\n\t\tjQuery.each( files, function ( index, file ) {\n\t\t\tmodel = new FileUploadQueueModel( {\n\t\t\t\tid: file.id,\n\t\t\t\tfilename: file.name\n\t\t\t} );\n\n\t\t\tcollection.add( model );\n\t\t} );\n\n\t\t// Create a new view based on the collection\n\t\tview = new FileUploadQueue( { collection: collection } );\n\t\tview.render();  // Generate the HTML, not attached to the DOM yet\n\n\t\t// Reset the region in case any error messages are hanging around from a previous upload\n\t\t// and show the new file upload queue\n\t\tthis.uiRegion.reset();\n\t\tthis.uiRegion.show( view );\n\n\t\t// Stash references\n\t\tthis.queueCollection = collection;\n\n\t\tup.refresh();\n\t\tup.start();\n\t},\n\n\t/**\n\t *\n\t * @param up\n\t * @param file\n\t */\n\tonUploadProgress: function ( up, file ) {\n\t\tconst model = this.queueCollection.get( file.id );\n\t\tmodel.set( { progress: file.percent } );\n\t},\n\n\t/**\n\t *\n\t * @param up\n\t * @param file\n\t * @param resp\n\t */\n\tonFileUploaded: function ( up, file, resp ) {\n\t\tconst model = this.queueCollection.get( file.id );\n\t\tlet response = resp.response;\n\t\tlet newFile = [];\n\t\tlet json;\n\n\t\t// Error condition 1\n\t\tif ( 'Error: ' === resp.response.substr( 0, 7 ) ) {\n\t\t\tresponse = response.substr( 7 );\n\t\t\tif ( window.console ) {\n\t\t\t\tconsole.log( response );\n\t\t\t}\n\n\t\t\tmodel.set( {\n\t\t\t\tprogress: 0,\n\t\t\t\terrorMsg: response\n\t\t\t} );\n\n\t\t\t// Error condition 2\n\t\t} else if ( '<e>' === resp.response.substr( 0, 3 ) ) {\n\t\t\tresponse = jQuery( response ).text(); // Strip tags, text only\n\t\t\tif ( window.console ) {\n\t\t\t\tconsole.log( response );\n\t\t\t}\n\n\t\t\tmodel.set( {\n\t\t\t\tprogress: 0,\n\t\t\t\terrorMsg: response\n\t\t\t} );\n\t\t} else {\n\t\t\tjson = response.match( /{.*}$/ );\n\n\t\t\tif ( null !== json && 0 < json.length ) {\n\t\t\t\tjson = jQuery.parseJSON( json[ 0 ] );\n\t\t\t} else {\n\t\t\t\tjson = {};\n\t\t\t}\n\n\t\t\tif ( 'object' !== typeof json || jQuery.isEmptyObject( json ) ) {\n\t\t\t\tif ( window.console ) {\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\tif ( window.console ) {\n\t\t\t\t\tconsole.log( json );\n\t\t\t\t}\n\n\t\t\t\tmodel.set( {\n\t\t\t\t\tprogress: 0,\n\t\t\t\t\terrorMsg: PodsI18n.__( 'Error uploading file: ' ) + file.name\n\t\t\t\t} );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewFile = {\n\t\t\t\tid: json.ID,\n\t\t\t\ticon: json.thumbnail,\n\t\t\t\tname: json.post_title,\n\t\t\t\tedit_link: json.edit_link,\n\t\t\t\tlink: json.link,\n\t\t\t\tdownload: json.download\n\t\t\t};\n\n\t\t\t// Remove the file from the upload queue model and trigger an event for the hosting container\n\t\t\tmodel.trigger( 'destroy', model );\n\t\t\tthis.trigger( 'added:files', newFile );\n\t\t}\n\t}\n\n} );\n\n","/* eslint-disable camelcase */\n/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\nimport { PodsFileUploader } from 'pods-dfv/_src/file-upload/uploaders/pods-file-uploader';\n\nexport const MediaModal = PodsFileUploader.extend( {\n\tmediaObject: {},\n\n\tfileUploader: 'attachment',\n\n\tinvoke: function () {\n\n\t\tif ( wp.Uploader.defaults.filters.mime_types === undefined ) {\n\t\t\twp.Uploader.defaults.filters.mime_types = [ {\n\t\t\t\ttitle: PodsI18n.__( 'Allowed Files' ),\n\t\t\t\textensions: '*'\n\t\t\t} ];\n\t\t}\n\n\t\tlet defaultExt = wp.Uploader.defaults.filters.mime_types[ 0 ].extensions;\n\n\t\twp.Uploader.defaults.filters.mime_types[ 0 ].extensions = this.fieldConfig[ 'limit_extensions' ];\n\n\t\t// set our settings\n\t\t// noinspection EqualityComparisonWithCoercionJS (\"1\" is every bit as valid to us as 1)\n\t\tthis.mediaObject = wp.media( {\n\t\t\ttitle: this.fieldConfig[ 'file_modal_title' ],\n\t\t\tmultiple: ( 1 != this.fieldConfig[ 'file_limit' ] ),\n\t\t\tlibrary: {\n\t\t\t\ttype: this.fieldConfig[ 'limit_types' ]\n\t\t\t},\n\t\t\t// Customize the submit button.\n\t\t\tbutton: {\n\t\t\t\t// Set the text of the button.\n\t\t\t\ttext: this.fieldConfig[ 'file_modal_add_button' ]\n\t\t\t}\n\t\t} );\n\n\t\t// One-shot callback ( event, callback, context )\n\t\tthis.mediaObject.once( 'select', this.onMediaSelect, this );\n\n\t\t// open the frame\n\t\tthis.mediaObject.open();\n\t\tthis.mediaObject.content.mode( this.fieldConfig[ 'file_attachment_tab' ] );\n\n\t\t// Reset the allowed file extensions\n\t\twp.Uploader.defaults.filters.mime_types[ 0 ].extensions = defaultExt;\n\t},\n\n\tonMediaSelect: function () {\n\t\tconst selection = this.mediaObject.state().get( 'selection' );\n\t\tlet newFiles = [];\n\n\t\tif ( !selection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// loop through the selected files\n\t\tselection.each( function ( attachment ) {\n\t\t\tconst sizes = attachment.attributes.sizes;\n\t\t\tlet attachmentThumbnail;\n\n\t\t\t// by default use the generic icon\n\t\t\tattachmentThumbnail = attachment.attributes.icon;\n\n\t\t\t// only thumbnails have sizes which is what we're on the hunt for\n\t\t\tif ( sizes !== undefined ) {\n\t\t\t\t// Get thumbnail if it exists\n\t\t\t\tif ( sizes.thumbnail !== undefined && sizes.thumbnail.url !== undefined ) {\n\t\t\t\t\tattachmentThumbnail = sizes.thumbnail.url;\n\t\t\t\t} else if ( sizes.full !== undefined && sizes.full.url !== undefined ) {\n\t\t\t\t\t// If thumbnail doesn't exist, get full because this is a small image\n\t\t\t\t\tattachmentThumbnail = sizes.full.url;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewFiles.push( {\n\t\t\t\tid: attachment.attributes.id,\n\t\t\t\ticon: attachmentThumbnail,\n\t\t\t\tname: attachment.attributes.title,\n\t\t\t\tedit_link: attachment.attributes.editLink,\n\t\t\t\tlink: attachment.attributes.link,\n\t\t\t\tdownload: attachment.attributes.url\n\t\t\t} );\n\t\t} );\n\n\t\t// Fire an event with an array of models to be added\n\t\tthis.trigger( 'added:files', newFiles );\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\n/**\n * A frame for displaying a modal popup with iframe content\n *\n * @augments wp.media.view.Frame\n */\nexport const PodsDFVModal = wp.media.view.Modal.extend( {\n\n\t/**\n\t * @param {Object} options\n\t * @returns {wp.media.view.Modal} Returns itself to allow chaining\n\t */\n\tclose: function ( options ) {\n\t\tconst retVal = wp.media.view.Modal.prototype.close.apply( this, options );\n\n\t\t// Alert the listening control when we've been cancelled\n\t\tif ( options && options.escape ) {\n\t\t\twindow.parent.jQuery( window.parent ).trigger( 'dfv:modal:cancel' );\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\nimport { PodsDFVModal } from 'pods-dfv/_src/core/dfv-modal';\n\n/**\n * A frame for displaying a modal popup with iframe content\n *\n * @augments wp.media.view.Frame\n */\nexport const IframeFrame = wp.media.view.Frame.extend( {\n\tclassName: 'pods-modal-frame',\n\n\ttemplate: _.template( '<div class=\"media-frame-title\" /><div class=\"media-frame-iframe\" />' ),\n\n\tregions: [ 'title', 'iframe' ],\n\n\tinitialize: function () {\n\t\twp.media.view.Frame.prototype.initialize.apply( this, arguments );\n\n\t\t// Ensure core UI is enabled.\n\t\tthis.$el.addClass( 'wp-core-ui' );\n\n\t\tthis.initState();\n\t\tthis.initModal();\n\n\t\tthis.on( 'iframe:create:default', this.iframeContent, this );\n\t\tthis.iframe.mode( 'default' );\n\n\t\tthis.on( 'title:create:default', this.createTitle, this );\n\t\tthis.title.mode( 'default' );\n\t\tthis.on( 'title:render', function ( view ) {\n\t\t\tview.$el.append( '<span class=\"dashicons dashicons-arrow-down\"></span>' );\n\t\t} );\n\t},\n\n\tinitState: function () {\n\t\tconst title = this.options.title || PodsI18n.__( 'Add New Record' );\n\t\tconst src = this.options.src || '/';\n\n\t\tthis.states.add( [\n\t\t\tnew wp.media.controller.State( {\n\t\t\t\tid: 'default',\n\t\t\t\ttitle: title,\n\t\t\t\tsrc: src\n\t\t\t} )\n\t\t] );\n\n\t\tthis.options.state = 'default';\n\t},\n\n\tinitModal: function () {\n\t\tthis.modal = new PodsDFVModal( {\n\t\t\tcontroller: this\n\t\t} );\n\n\t\tthis.modal.content( this );\n\t},\n\n\trender: function () {\n\t\t// Activate the default state if no active state exists.\n\t\tif ( !this.state() && this.options.state ) {\n\t\t\tthis.setState( this.options.state );\n\t\t}\n\n\t\t/**\n\t\t * call 'render' directly on the parent class\n\t\t */\n\t\treturn wp.media.view.Frame.prototype.render.apply( this, arguments );\n\t},\n\n\t/**\n\t * @param {Object} content\n\t * @this wp.media.controller.Region\n\t */\n\tiframeContent: function ( content ) {\n\t\tcontent.view = new wp.media.view.Iframe( {\n\t\t\tcontroller: this\n\t\t} );\n\t},\n\n\tcreateTitle: function ( title ) {\n\t\ttitle.view = new wp.media.View( {\n\t\t\tcontroller: this,\n\t\t\ttagName: 'h1'\n\t\t} );\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette */\n\n/**\n *\n */\nexport const RelationshipModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t'id': 0,\n\t\t'name': '',\n\t\t'icon': '',\n\t\t'use_dashicon': false,\n\t\t'link': '',\n\t\t'edit_link': '',\n\t\t'selected': false\n\t},\n\n\ttoggleSelected: function () {\n\t\tthis.set( 'selected', !this.get( 'selected' ) );\n\t}\n} );\n\n/**\n *\n */\nexport const RelationshipCollection = Backbone.Collection.extend( {\n\tmodel: RelationshipModel,\n\n\t/**\n\t *\n\t * @param { ?string[] } ids\n\t */\n\tsetSelected: function ( ids ) {\n\t\tthis.map( function ( thisModel ) {\n\t\t\tconst selected = _.contains( ids, thisModel.get( 'id' ) + '' );\n\t\t\tthisModel.set( 'selected', selected );\n\t\t} );\n\t},\n\n\t/**\n\t * Return a new collection containing just the selected items in this one\n\t *\n\t * @returns {*}\n\t */\n\tfilterBySelected: function () {\n\n\t\t// Get an array with only the selected items\n\t\tconst filtered = this.filter( function ( itemModel ) {\n\t\t\treturn ( itemModel.get( 'selected' ) );\n\t\t} );\n\n\t\t// this.filter is going to return an array, so create a collection out of it\n\t\treturn new RelationshipCollection( filtered );\n\t},\n\n\t/**\n\t * Return a new collection containing just the unselected items in this one\n\t *\n\t * @returns {*}\n\t */\n\tfilterByUnselected: function () {\n\n\t\t// Get an array with only the unselected items\n\t\tconst filtered = this.filter( function ( itemModel ) {\n\t\t\treturn !( itemModel.get( 'selected' ) );\n\t\t} );\n\n\t\t// this.filter is going to return an array, so create a collection out of it\n\t\treturn new RelationshipCollection( filtered );\n\t}\n\n} );\n\n","/*global jQuery, _, Backbone, Marionette */\n\nexport const PickFieldModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\t'view_name': 'select',\n\t\t'iframe_src': '',\n\t\t'pick_format_type': 'single',\n\t\t'pick_show_icon': false,\n\t\t'pick_show_view_link': false,\n\t\t'pick_show_edit_link': false\n\t}\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/radio-item.html';\n\nimport { PodsFieldListView, PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const RadioItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model ) + 1 // One based indexing unlike checkboxes\n\t\t};\n\t},\n\n\tmodelChanged: function () {\n\t\tthis.render();\n\t}\n\n} );\n\n/**\n *\n */\nexport const RadioView = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-radio',\n\n\tchildView: RadioItem\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/checkbox-item.html';\n\nimport { PodsFieldListView, PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const CheckboxItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\ttemplate: _.template( template ),\n\n\tclassName: 'pods-pick',\n\n\tui: {\n\t\tcheckbox: 'input.pods-form-ui-field-type-pick'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.checkbox': 'toggle:selected'\n\t},\n\n\tmodelEvents: {\n\t\t'change': 'modelChanged'\n\t},\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model )\n\t\t};\n\t},\n\n\tmodelChanged: function () {\n\t\tthis.render();\n\t}\n} );\n\n/**\n *\n */\nexport const CheckboxView = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-checkbox-view',\n\n\tchildView: CheckboxItem,\n\n\tchildViewEvents: {\n\t\t'toggle:selected': 'onChildviewToggleSelected'\n\t},\n\n\t/**\n\t *\n\t */\n\tonAttach: function () {\n\n\t\t// Check initial selection limit status and enforce it if needed\n\t\tif ( !this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewToggleSelected: function ( childView ) {\n\n\t\tchildView.model.toggleSelected();\n\n\t\t// Dynamically enforce selection limit\n\t\tif ( this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitUnder();\n\t\t} else {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t * @returns {boolean} true if unlimited selections are allowed or we're below the selection limit\n\t */\n\tvalidateSelectionLimit: function () {\n\t\tconst fieldConfig = this.fieldModel.get( 'fieldConfig' );\n\t\tlet limit, numSelected;\n\n\t\tlimit = +fieldConfig.pick_limit;  // Unary plus will implicitly cast to number\n\t\tnumSelected = this.collection.filterBySelected().length;\n\n\t\treturn 0 === limit || numSelected < limit;\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitOver: function () {\n\t\tthis.$el.find( 'input:checkbox:not(:checked)' ).prop( 'disabled', true );\n\t\tthis.trigger( 'selection:limit:over', this );\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitUnder: function () {\n\t\tthis.$el.find( 'input:checkbox' ).prop( 'disabled', false );\n\t\tthis.trigger( 'selection:limit:under', this );\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, select2, sprintf, wp, ajaxurl, PodsI18n */\n\n// Note: this is a template-less view\nimport { PodsFieldListView, PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\nimport { RelationshipCollection } from 'pods-dfv/_src/pick/relationship-model';\n\nconst SELECT2_UL_TARGET = 'ul.select2-selection__rendered';\nconst SELECT2_SELECTED_TARGET = '.select2-selection__choice';\n\n/**\n * option\n *\n * @extends Backbone.View\n */\nexport const SelectItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'option',\n\n\ttemplate: false,\n\n\tinitialize: function ( options ) {\n\t\tthis.$el.val( this.model.get( 'id' ) );\n\n\t\tthis.$el.html( this.model.get( 'name' ) );\n\n\t\tif ( this.model.get( 'selected' ) ) {\n\t\t\tthis.$el.prop( 'selected', 'selected' );\n\t\t}\n\t}\n} );\n\n/**\n * optgroup\n *\n * @extends Backbone.View\n */\nexport const Optgroup = PodsFieldListView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'optgroup',\n\n\tchildView: SelectItem,\n\n\tattributes: function () {\n\t\treturn {\n\t\t\tlabel: this.model.get( 'label' )\n\t\t};\n\t}\n} );\n\n/**\n * select\n *\n * @extends Backbone.View\n */\nexport const SelectView = Marionette.CollectionView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'select',\n\n\ttriggers: {\n\t\t'change': {\n\t\t\tevent: 'change:selected',\n\t\t\tstopPropagation: false\n\t\t}\n\t},\n\n\tmultiLastValidSelection: [],\n\n\t/**\n\t *\n\t * @param newCollection\n\t */\n\tsetCollection: function ( newCollection ) {\n\t\tthis.collection = newCollection;\n\t},\n\n\t/**\n\t *\n\t * @param options\n\t */\n\tinitialize: function ( options ) {\n\t\tthis.fieldModel = options.fieldModel;\n\t\tthis.fieldConfig = this.fieldModel.get( 'fieldConfig' );\n\t},\n\n\t/**\n\t * Set the proper child view (optgroups or no)\n\t *\n\t * @param item\n\t * @returns {*}\n\t */\n\tchildView: function ( item ) {\n\t\tif ( this.fieldConfig.optgroup ) {\n\t\t\treturn Optgroup;\n\t\t} else {\n\t\t\treturn SelectItem;\n\t\t}\n\t},\n\n\t/**\n\t * todo: We're bypassing the PodsFieldListView functionality, need to explicitly include it for now\n\t *\n\t * @param model\n\t * @param index\n\t * @returns {{fieldModel: *}}\n\t */\n\tchildViewOptions: function ( model, index ) {\n\t\tlet returnOptions = { fieldModel: this.fieldModel };\n\n\t\tif ( this.fieldConfig.optgroup ) {\n\t\t\treturnOptions.collection = new RelationshipCollection( model.get( 'collection' ) );\n\t\t}\n\n\t\treturn returnOptions;\n\t},\n\n\t/**\n\t * todo: We're bypassing the PodsFieldListView functionality, need to explicitly include it for now\n\t *\n\t * @returns {{}}\n\t */\n\tserializeData: function () {\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tlet data = this.model ? this.model.toJSON() : {};\n\n\t\tdata.htmlAttr = fieldModel.get( 'attributes' );\n\t\tdata.fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\treturn data;\n\t},\n\n\t/**\n\t *\n\t */\n\tattributes: function () {\n\n\t\t/**\n\t\t * @param {string} htmlAttr.name\n\t\t * @param {string} htmlAttr.class\n\t\t * @param {string} htmlAttr.name_clean\n\t\t * @param {string} htmlAttr.id\n\t\t *\n\t\t * @param {string} fieldConfig.pick_format_type 'single' or 'multi'\n\t\t */\n\t\tconst fieldModel = this.options.fieldModel;\n\t\tconst htmlAttr = fieldModel.get( 'htmlAttr' );\n\t\tconst fieldConfig = fieldModel.get( 'fieldConfig' );\n\n\t\tlet name = htmlAttr.name;\n\t\tif ( 'multi' === fieldConfig.pick_format_type ) {\n\t\t\tname = name + '[]';\n\t\t}\n\t\treturn {\n\t\t\t'name': name,\n\t\t\t'class': htmlAttr.class,\n\t\t\t'data-name-clean': htmlAttr.name_clean,\n\t\t\t'id': htmlAttr.id,\n\t\t\t'tabindex': '2',\n\t\t\t'multiple': ( 'multi' === fieldConfig.pick_format_type )\n\t\t};\n\t},\n\n\t/**\n\t * Setup to be done once attached to the DOM.  Select2 has some setup needs.\n\t *\n\t * @var {RelationshipCollection} this.collection\n\t */\n\tonAttach: function () {\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\n\t\t// Initialize select2 fields\n\t\tif ( 'select2' === view_name ) {\n\t\t\tthis.setupSelect2();\n\t\t}\n\n\t\t// Check initial selection limit status for regular multiselect and enforce it if needed\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\n\t\t\t// Store initial selection in case we need to revert back from an invalid state\n\t\t\tthis.multiLastValidSelection = this.$el.val();\n\t\t}\n\n\t\t// If we're at the limit: disable all unselected items so no selections can be added\n\t\tif ( !this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\t},\n\n\t/**\n\t * @var {RelationshipCollection} this.collection\n\t */\n\tonChangeSelected: function () {\n\t\tconst limit = +this.fieldConfig.pick_limit; // Unary plus will implicitly cast to number\n\t\tconst view_name = this.fieldConfig.view_name;\n\t\tconst format_type = this.fieldConfig.pick_format_type;\n\n\t\t// Regular multiselect may need to reject the selection change\n\t\tif ( 'select' === view_name && 'multi' === format_type ) {\n\n\t\t\t// Has the selection gone OVER the limit?  Can occur with consecutive item selection.\n\t\t\tif ( null !== this.$el.val() && 0 !== limit && limit < this.$el.val().length ) {\n\n\t\t\t\t// Revert to the last valid selection and punt on what they attempted\n\t\t\t\tthis.$el.val( this.multiLastValidSelection );\n\t\t\t\twindow.alert( `${PodsI18n.__( 'You can only select' )} ${sprintf( PodsI18n._n( '%s item', '%s items', limit ), limit )}` );\n\t\t\t\tthis.trigger( 'childview:change:selected', this );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Update the collection and last valid selection based on the new selections\n\t\tthis.collection.setSelected( this.$el.val() );\n\t\tthis.multiLastValidSelection = this.$el.val();\n\n\t\t// Dynamically enforce selection limits\n\t\tif ( this.validateSelectionLimit() ) {\n\t\t\tthis.selectionLimitUnder();\n\t\t} else {\n\t\t\tthis.selectionLimitOver();\n\t\t}\n\n\t\tthis.trigger( 'childview:change:selected', this );\n\t},\n\n\t/**\n\t * @var {RelationshipCollection} this.collection\n\t *\n\t * @returns {boolean} true if unlimited selections are allowed or we're below the selection limit\n\t */\n\tvalidateSelectionLimit: function () {\n\t\tlet limit, numSelected;\n\n\t\tlimit = +this.fieldConfig.pick_limit;  // Unary plus will implicitly cast to number\n\t\tnumSelected = this.collection.filterBySelected().length;\n\n\t\treturn 0 === limit || numSelected < limit;\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitOver: function () {\n\t\tconst viewName = this.fieldConfig.view_name;\n\t\tconst formatType = this.fieldConfig.pick_format_type;\n\n\t\tif ( 'select' === viewName && 'multi' === formatType ) {\n\t\t\t// At the limit: disable all unselected items so no further selections can be added\n\t\t\tthis.$el.find( 'option:not(:selected)' ).prop( 'disabled', true );\n\t\t}\n\n\t\tthis.trigger( 'childview:selection:limit:over', this );\n\t},\n\n\t/**\n\t *\n\t */\n\tselectionLimitUnder: function () {\n\t\tconst viewName = this.fieldConfig.view_name;\n\t\tconst formatType = this.fieldConfig.pick_format_type;\n\n\t\tif ( 'select' === viewName && 'multi' === formatType ) {\n\t\t\t// Not at limit, make sure all items are enabled\n\t\t\tthis.$el.find( 'option' ).prop( 'disabled', false );\n\t\t}\n\n\t\tthis.trigger( 'childview:selection:limit:under', this );\n\t},\n\n\t/**\n\t * No filtering, by default.  Consuming views can override this function to provide custom filtering\n\t * (e.g. List View needs to filter items already selected for its select from existing list)\n\t *\n\t * @param data\n\t */\n\tfilterAjaxList: function ( data ) {\n\t\tconst selectedItems = this.collection.filterBySelected();\n\t\tconst returnList = [];\n\n\t\t_.each( data.results, function ( element ) {\n\t\t\telement.text = element.name; // Select2 needs the \"text\" key but our model uses \"name\"\n\n\t\t\t// Only keep choices that haven't been selected yet, we don't want selected items in the autocomplete portion\n\t\t\tif ( !selectedItems.get( element.id ) ) {\n\t\t\t\treturnList.push( element );\n\t\t\t}\n\t\t} );\n\n\t\treturn { 'results': returnList };\n\t},\n\n\t/**\n\t * Initialize Select2, setup drag-drop reordering\n\t */\n\tsetupSelect2: function () {\n\t\tconst self = this;\n\t\tconst $select2 = this.$el;\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\t\tconst ajaxData = fieldConfig.ajax_data;\n\t\tconst select2Overrides = fieldConfig.select2_overrides;\n\t\tconst limit = fieldConfig.pick_limit;\n\t\tconst isSingle = ( 'single' === fieldConfig.pick_format_type );\n\t\tconst selectedCount = this.collection.filterBySelected().length;\n\t\tlet $ulContainer, select2Options, placeholder;\n\n\t\t// 'placeholder' for single select requires an empty option.  None of the examples set selected but\n\t\t// it did not work for me in testing with just an empty option like the examples.\n\t\t//\n\t\t// https://select2.org/placeholders#single-select-placeholders\n\t\t// https://github.com/select2/select2/issues/3553\n\t\tif ( 0 === selectedCount && isSingle ) {\n\t\t\t$select2.prepend( '<option selected=\"selected\">' );\n\t\t}\n\n\t\t// ToDo:\n\t\t// limitDisable is only used to control the List View's select2 component, it won't be set\n\t\t// for regular autocomplete.  This function should be generic and not have to poke around with\n\t\t// special properties like this for exception cases.\n\t\tif ( fieldConfig.limitDisable ) {\n\t\t\tplaceholder = `${PodsI18n.__( 'You can only select' )} ${sprintf( PodsI18n._n( '%s item', '%s items', limit ), limit )}`;\n\t\t} else {\n\t\t\tplaceholder = `${PodsI18n.__( 'Search' )} ${fieldConfig.label}...`;\n\t\t}\n\n\t\tselect2Options = {\n\t\t\tmaximumSelectionLength: isSingle ? undefined : limit, // Should not be set for single select, messes up placeholder\n\t\t\tplaceholder: placeholder,\n\t\t\tallowClear: isSingle,\n\t\t\tdisabled: fieldConfig.limitDisable,\n\t\t\ttags: fieldConfig.pick_taggable,\n\t\t\tescapeMarkup: function ( text ) {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t};\n\n\t\tif ( ajaxData.ajax ) {\n\t\t\tjQuery.extend( select2Options, {\n\t\t\t\tminimumInputLength: ajaxData.minimum_input_length,\n\t\t\t\tajax: {\n\t\t\t\t\turl: ajaxurl + '?pods_ajax=1',\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdelay: ajaxData.delay,\n\t\t\t\t\tdata: function ( params ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t_wpnonce: ajaxData._wpnonce,\n\t\t\t\t\t\t\taction: 'pods_relationship',\n\t\t\t\t\t\t\tmethod: 'select2',\n\t\t\t\t\t\t\tpod: ajaxData.pod,\n\t\t\t\t\t\t\tfield: ajaxData.field,\n\t\t\t\t\t\t\turi: ajaxData.uri,\n\t\t\t\t\t\t\tid: ajaxData.id,\n\t\t\t\t\t\t\tquery: params.term // ToDo: term{lang}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tprocessResults: function ( data, params ) {\n\t\t\t\t\t\treturn self.filterAjaxList( data, params );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Initialize select2\n\t\t$select2.selectWoo( jQuery.extend( true, select2Options, select2Overrides ) );\n\n\t\t// Get a reference to the ul container of the visual UI portion.  Can't do this until select2 is initialized\n\t\t$ulContainer = $select2.parent().find( SELECT2_UL_TARGET );\n\n\t\t// Make the list drag-drop sortable\n\t\t$ulContainer.sortable( {\n\t\t\tcontainment: 'parent'\n\t\t} );\n\n\t\t// With select2 4.0, sortable is just reordering the UI elements.  Keep the underlying select/option list\n\t\t// synced with the changes.  See: https://github.com/select2/select2/issues/3004\n\t\t$ulContainer.on( 'sortstop', function () {\n\t\t\tconst $selected = $ulContainer.find( SELECT2_SELECTED_TARGET ).get().reverse();\n\n\t\t\tjQuery( $selected ).each( function () {\n\t\t\t\tconst id = jQuery( this ).data( 'data' ).id;\n\t\t\t\tconst option = $select2.find( 'option[value=\"' + id + '\"]' )[ 0 ];\n\n\t\t\t\t$select2.prepend( option );\n\t\t\t} );\n\t\t} );\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/list-item.html';\n\nimport { PodsFieldListView, PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\n/**\n *\n */\nexport const ListItem = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'li',\n\n\tclassName: 'pods-dfv-list-item pods-relationship',\n\n\ttemplate: _.template( template ),\n\n\tui: {\n\t\tremoveButton: '.pods-dfv-list-remove a',\n\t\teditButton: '.pods-dfv-list-edit a'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'remove:item:click',\n\t\t'click @ui.editButton': 'edit:item:click'\n\t},\n\n\ttemplateContext: function () {\n\t\treturn {\n\t\t\tordinal: this.model.collection.indexOf( this.model )\n\t\t};\n\t}\n\n} );\n\n/**\n *  Represents the markup of the container as a whole\n */\nexport const ListView = PodsFieldListView.extend( {\t// Cache the template function for the overall container\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'ul',\n\n\tclassName: 'pods-dfv-list pods-relationship',\n\n\tchildView: ListItem,\n\n\t// Pass these up the containment chain\n\tchildViewTriggers: {\n\t\t'remove:item:click': 'childview:remove:item:click',\n\t\t'edit:item:click': 'childview:edit:item:click'\n\t},\n\n\tfilter: function ( child, index, collection ) {\n\t\treturn child.attributes.selected;\n\t},\n\n\tonAttach: function () {\n\t\tconst fieldConfig = this.options.fieldModel.get( 'fieldConfig' );\n\n\t\t// @todo\n\t\t// http://stackoverflow.com/questions/1735372/jquery-sortable-list-scroll-bar-jumps-up-when-sorting/4187833#4187833\n\n\t\tif ( 1 !== fieldConfig[ 'pick_limit' ] ) {\n\t\t\t// init sortable\n\t\t\tthis.$el.sortable( {\n\t\t\t\tcontainment: 'parent',\n\t\t\t\taxis: 'y',\n\t\t\t\tscrollSensitivity: 40,\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\topacity: 0.6\n\t\t\t} );\n\t\t}\n\t}\n\n} );\n","/*global jQuery, _, Backbone, Marionette, wp */\nimport template from 'pods-dfv/_src/pick/views/add-new.html';\n\nimport { PodsFieldView } from 'pods-dfv/_src/core/pods-field-views';\n\nconst DISABLED_CLASS = 'button-disabled';\n\nexport const AddNew = PodsFieldView.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttagName: 'div',\n\n\tclassName: 'podsform-dfv-list-relationship-container',\n\n\tui: {\n\t\taddButton: 'a.pods-related-add-new'\n\t},\n\n\ttemplate: _.template( template ),\n\n\ttriggers: {\n\t\t'click @ui.addButton': 'add:new:click'\n\t},\n\n\t/**\n\t *\n\t */\n\tdisable: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\t\taddButton.addClass( DISABLED_CLASS ); // Note: this just styles the link (button), click event enforces\n\t},\n\n\t/**\n\t *\n\t */\n\tenable: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\t\taddButton.removeClass( DISABLED_CLASS ); // Note: this just styles the link (button), click event enforces\n\t},\n\n\t/**\n\t *\n\t */\n\tonAddNewClick: function () {\n\t\tconst addButton = this.getUI( 'addButton' );\n\n\t\t// Only pass the event up the view chain if we're enabled\n\t\tif ( !addButton.hasClass( DISABLED_CLASS ) ) {\n\t\t\tthis.trigger( 'childview:add:new', this );\n\t\t}\n\t}\n} );\n","/* eslint-disable camelcase */\n/*global jQuery, _, Backbone, Marionette, wp, PodsI18n */\n\nimport template from 'pods-dfv/_src/pick/pick-layout.html';\n\nimport { PodsDFVFieldModel } from 'pods-dfv/_src/core/pods-field-model';\nimport { PodsDFVFieldLayout } from 'pods-dfv/_src/core/pods-field-views';\n\nimport { IframeFrame } from 'pods-dfv/_src/core/iframe-frame';\n\nimport { RelationshipCollection } from 'pods-dfv/_src/pick/relationship-model';\nimport { PickFieldModel } from 'pods-dfv/_src/pick/pick-field-model';\n\nimport { RadioView } from 'pods-dfv/_src/pick/views/radio-view';\nimport { CheckboxView } from 'pods-dfv/_src/pick/views/checkbox-view';\nimport { SelectView } from 'pods-dfv/_src/pick/views/select-view';\nimport { ListView } from 'pods-dfv/_src/pick/views/list-view';\nimport { AddNew } from 'pods-dfv/_src/pick/views/add-new';\n\nconst views = {\n\t'checkbox': CheckboxView,\n\t'select': SelectView,\n\t'select2': SelectView,  // SelectView handles select2 as well\n\t'radio': RadioView,\n\t'list': ListView\n};\n\nlet modalIFrame;\n\n/**\n * @extends Backbone.View\n */\nexport const Pick = PodsDFVFieldLayout.extend( {\n\tchildViewEventPrefix: false, // Disable implicit event listeners in favor of explicit childViewTriggers and childViewEvents\n\n\ttemplate: _.template( template ),\n\n\tregions: {\n\t\tautocomplete: '.pods-ui-list-autocomplete',\n\t\tlist: '.pods-pick-values',\n\t\taddNew: '.pods-ui-add-new'\n\t},\n\n\tchildViewEvents: {\n\t\t'childview:remove:item:click': 'onChildviewRemoveItemClick',\n\t\t'childview:edit:item:click': 'onChildviewEditItemClick',\n\t\t'childview:selection:limit:over': 'onChildviewSelectionLimitOver',\n\t\t'childview:selection:limit:under': 'onChildviewSelectionLimitUnder',\n\t\t'childview:change:selected': 'onChildviewChangeSelected',\n\t\t'childview:add:new': 'onChildviewAddNew'\n\t},\n\n\t/**\n\t *\n\t */\n\tonBeforeRender: function () {\n\t\tif ( this.collection === undefined ) {\n\t\t\tthis.collection = new RelationshipCollection( this.fieldItemData );\n\t\t}\n\t},\n\n\t/**\n\t *\n\t */\n\tonRender: function () {\n\t\tthis.fieldConfig = new PickFieldModel( this.model.get( 'fieldConfig' ) );\n\n\t\t// Add New?\n\t\t// noinspection EqualityComparisonWithCoercionJS (why would we reject \"1\"?)\n\t\tif ( '' !== this.fieldConfig.get( 'iframe_src' ) && 1 == this.fieldConfig.get( 'pick_allow_add_new' ) ) {\n\t\t\tthis.showAddNew();\n\t\t}\n\n\t\t// Autocomplete?\n\t\tif ( 'list' === this.fieldConfig.get( 'view_name' ) ) {\n\t\t\tthis.buildAutocomplete();\n\t\t}\n\n\t\t// Build the list last, events fired by the list (like selection limit) may impact state in other views we manage\n\t\tthis.showList();\n\t},\n\n\t/**\n\t * This is for the List View's autocomplete for select from existing\n\t */\n\tbuildAutocomplete: function () {\n\t\tlet fieldConfig, model, collection, view;\n\t\tconst pickLimit = +this.fieldConfig.get( 'pick_limit' ); // Unary plus forces cast to number\n\n\t\tfieldConfig = {\n\t\t\tview_name: 'select2',\n\t\t\tpick_format_type: 'multi',\n\t\t\tselectFromExisting: true,\n\t\t\tajax_data: this.fieldConfig.get( 'ajax_data' ),\n\t\t\tselect2_overrides: this.fieldConfig.get( 'select2_overrides' ),\n\t\t\tlabel: this.fieldConfig.get( 'label' ),\n\t\t\tpick_limit: pickLimit\n\t\t};\n\n\t\t// The autocomplete portion of List View doesn't track selected items; disable if we're at the selection limit\n\t\tif ( this.collection.filterBySelected().length >= pickLimit && 0 !== pickLimit ) {\n\n\t\t\tfieldConfig.limitDisable = true;\n\t\t\tthis.onChildviewSelectionLimitOver();\n\n\t\t} else {\n\n\t\t\tthis.onChildviewSelectionLimitUnder();\n\t\t}\n\n\t\tmodel = new PodsDFVFieldModel( { fieldConfig: fieldConfig } );\n\t\tcollection = this.collection.filterByUnselected();\n\t\tview = new SelectView( { collection: collection, fieldModel: model } );\n\n\t\t// Provide a custom list filter for the autocomplete portion's AJAX data lists\n\t\tview.filterAjaxList = this.filterAjaxList.bind( this );\n\n\t\t// Destroy any existing view and rebuild from scratch\n\t\tif ( this.getChildView( 'autocomplete' ) ) {\n\t\t\tthis.getChildView( 'autocomplete' ).destroy();\n\t\t}\n\n\t\tthis.showChildView( 'autocomplete', view );\n\t},\n\n\t/**\n\t *\n\t */\n\tshowList: function () {\n\t\tlet viewName, View, list;\n\n\t\t// Setup the view to be used\n\t\tviewName = this.fieldConfig.get( 'view_name' );\n\t\tif ( views[ viewName ] === undefined ) {\n\t\t\tthrow new Error( `Invalid view name \"${viewName}\"` );\n\t\t}\n\t\tView = views[ viewName ];\n\t\tlist = new View( { collection: this.collection, fieldModel: this.model } );\n\n\t\tthis.showChildView( 'list', list );\n\t},\n\n\t/**\n\t *\n\t */\n\tshowAddNew: function () {\n\t\tlet addNew = new AddNew( { fieldModel: this.model } );\n\t\tthis.showChildView( 'addNew', addNew );\n\t},\n\n\t/**\n\t * List Views need to filter items already selected from their select from existing list.  The AJAX function\n\t * itself does not filter.\n\t *\n\t * @param data\n\t */\n\tfilterAjaxList: function ( data ) {\n\t\tconst selectedItems = this.collection.filterBySelected();\n\t\tconst returnList = [];\n\n\t\t// Loop through the items returned via ajax\n\t\t_.each( data.results, function ( element ) {\n\t\t\telement.text = element.name; // Select2 needs the \"text\" key but our model uses \"name\"\n\n\t\t\t// Only keep choices that haven't been selected yet, we don't want selected items in the autocomplete portion\n\t\t\tif ( !selectedItems.get( element.id ) ) {\n\t\t\t\treturnList.push( element );\n\t\t\t}\n\t\t} );\n\n\t\t// The collection may be partial in ajax mode, make sure we add any items we didn't yet have\n\t\tthis.collection.add( returnList );\n\t\tthis.getChildView( 'autocomplete' ).setCollection( this.collection.filterByUnselected() );\n\n\t\treturn { 'results': returnList };\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewSelectionLimitOver: function ( childView ) {\n\t\tconst addNew = this.getChildView( 'addNew' );\n\t\tif ( addNew ) {\n\t\t\taddNew.disable();\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewSelectionLimitUnder: function ( childView ) {\n\t\tconst addNew = this.getChildView( 'addNew' );\n\t\tif ( addNew ) {\n\t\t\taddNew.enable();\n\t\t}\n\t},\n\n\t/**\n\t * \"Remove\" in list view just toggles an item's selected attribute\n\t *\n\t * @param childView\n\t */\n\tonChildviewRemoveItemClick: function ( childView ) {\n\t\tchildView.model.toggleSelected();\n\t\tthis.getChildView( 'list' ).render();\n\n\t\t// Keep autocomplete in sync, removed items should now be available choices\n\t\tif ( 'list' === this.fieldConfig.get( 'view_name' ) ) {\n\t\t\tthis.buildAutocomplete();\n\t\t}\n\t},\n\n\t/**\n\t * @param childView\n\t */\n\tonChildviewAddNew: function ( childView ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\n\t\tmodalIFrame = new IframeFrame( {\n\t\t\ttitle: fieldConfig.iframe_title_add,\n\t\t\tsrc: fieldConfig.iframe_src\n\t\t} );\n\n\t\tthis.setModalListeners();\n\t\tmodalIFrame.modal.open();\n\t},\n\n\t/**\n\t * @param childView\n\t */\n\tonChildviewEditItemClick: function ( childView ) {\n\t\tconst fieldConfig = this.model.get( 'fieldConfig' );\n\n\t\tmodalIFrame = new IframeFrame( {\n\t\t\ttitle: fieldConfig.iframe_title_edit,\n\t\t\tsrc: childView.ui.editButton.attr( 'href' )\n\t\t} );\n\n\t\tthis.setModalListeners();\n\t\tmodalIFrame.modal.open();\n\t},\n\n\t/**\n\t *\n\t * @param childView\n\t */\n\tonChildviewChangeSelected: function ( childView ) {\n\n\t\t// Refresh the autocomplete and List View lists on autocomplete selection\n\t\tif ( childView.fieldConfig.selectFromExisting ) {\n\t\t\tthis.buildAutocomplete();\n\t\t\tthis.getChildView( 'list' ).render();\n\t\t}\n\t},\n\n\tsetModalListeners: function () {\n\t\tjQuery( window ).on( 'dfv:modal:update', this.modalSuccess.bind( this ) );\n\t\tjQuery( window ).on( 'dfv:modal:cancel', this.modalCancel.bind( this ) );\n\t},\n\n\tclearModalListeners: function () {\n\t\tjQuery( window ).off( 'dfv:modal:update' );\n\t\tjQuery( window ).off( 'dfv:modal:cancel' );\n\t},\n\n\t/**\n\t * @param event\n\t * @param data\n\t */\n\tmodalSuccess: function ( event, data ) {\n\t\tconst itemModel = this.collection.get( data.id );\n\n\t\tif ( itemModel ) {\n\t\t\t// Edit: update an existing model and force a re-render\n\t\t\titemModel.set( data );\n\t\t\tthis.getChildView( 'list' ).render();\n\t\t} else {\n\t\t\t// Add new: create a new model in the collection\n\t\t\tthis.collection.add( data );\n\t\t}\n\n\t\tthis.clearModalListeners();\n\t\tmodalIFrame.modal.close( {} );\n\t},\n\n\t/**\n\t *\n\t */\n\tmodalCancel: function () {\n\t\tthis.clearModalListeners();\n\t}\n\n} );\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Text extends React.Component {\n\tconstructor ( props ) {\n\t\tsuper( props );\n\t\tconsole.log( props );\n\t\tthis.state = {\n\t\t\tvalue: this.props.fieldItemData[ 0 ]\n\t\t};\n\t}\n\n\tstatic get propTypes () {\n\t\treturn {\n\t\t\tfieldType: PropTypes.string,\n\t\t\tfieldConfig: PropTypes.object,\n\t\t\thtmlAttr: PropTypes.object,\n\t\t\tfieldItemData: PropTypes.array\n\t\t};\n\t}\n\n\tonValueChanged ( event ) {\n\t\tthis.setState( { value: event.target.value } );\n\t};\n\n\trender () {\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname={ this.props.htmlAttr.name }\n\t\t\t\tid={ this.props.htmlAttr.id }\n\t\t\t\tclassName={ this.props.htmlAttr.class }\n\t\t\t\tdata-name-clean={ this.props.htmlAttr.name_clean }\n\t\t\t\tplaceholder=\"DFV text box\"\n\t\t\t\tmaxLength=\"255\"\n\t\t\t\tvalue={ this.state.value }\n\t\t\t\tonChange={ this.onValueChanged.bind( this ) }\n\t\t\t/>\n\t\t);\n\t}\n}\n","import jQuery from 'jquery';\nimport { mnRenderer } from 'pods-dfv/_src/core/renderers/mn-renderer.js';\nimport { reactRenderer } from 'pods-dfv/_src/core/renderers/react-renderer.js';\n\nimport * as fields from 'pods-dfv/_src/field-manifest.js';\nimport * as models from 'pods-dfv/_src/model-manifest.js';\n\nconst INIT_TARGETS = '.pods-form-ui-field';           // Where to look for scripts\nconst SCRIPT_TARGET = 'script.pods-dfv-field-data';   // What scripts to look for\n\nconst fieldClasses =  {\n\t'file': {\n\t\tFieldClass: fields.FileUpload,\n\t\trenderer: mnRenderer\n\t},\n\t'avatar': {\n\t\tFieldClass: fields.FileUpload,\n\t\trenderer: mnRenderer\n\t},\n\t'pick': {\n\t\tFieldClass: fields.Pick,\n\t\trenderer: mnRenderer\n\t},\n\t'text': {\n\t\tFieldClass: fields.Text,\n\t\trenderer: reactRenderer\n\t}\n};\n\nconst PodsDFV = {\n\tfields: fields,\n\tmodels: models,\n\tfieldInstances: {},\n\n\t/**\n\t *\n\t */\n\tinit: function () {\n\n\t\t// Loop through any targets that may contain scripts\n\t\tjQuery( INIT_TARGETS ).each( function () {\n\t\t\tlet data = { fieldType: undefined };\n\n\t\t\t// Combine data from all in-line data scripts in the container\n\t\t\t// and remove the scripts from the page\n\t\t\tjQuery( this ).find( SCRIPT_TARGET ).each( function () {\n\t\t\t\tconst newData = jQuery.parseJSON( jQuery( this ).html() );\n\n\t\t\t\t// Kludge to disable the \"Add New\" button if we're inside a media modal.  This should\n\t\t\t\t// eventually be ironed out so we can use Add New from this context (see #4864\n\t\t\t\tif ( jQuery( this ).parents( '.media-modal-content' ).length ) {\n\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tnewData.fieldConfig.pick_allow_add_new = 0;\n\t\t\t\t}\n\n\t\t\t\tjQuery.extend( data, newData );\n\t\t\t\tjQuery( this ).remove();\n\t\t\t} );\n\n\t\t\t// Ignore anything that doesn't have the field type set\n\t\t\tif ( data.fieldType !== undefined ) {\n\t\t\t\tlet field = fieldClasses[ data.fieldType ];\n\n\t\t\t\tif ( field !== undefined ) {\n\t\t\t\t\t//self.fieldInstances[ data.htmlAttr.id ] = field.renderer( field.fieldClass, data );\n\t\t\t\t\tfield.renderer( field.FieldClass, this, data );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\nexport default PodsDFV;\n\n/**\n * Kick everything off when the document is ready\n */\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tPodsDFV.init();\n} );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport function reactRenderer ( FieldClass, element, data ) {\n\tconst Field = React.createFactory( FieldClass );\n\n\tReactDOM.render(\n\t\tField( data ),\n\t\telement\n\t);\n}\n"],"names":["PodsDFVFieldModel","Backbone","Model","extend","mnRenderer","FieldClass","element","data","newField","htmlAttr","fieldConfig","fieldItemData","render","trigger","PodsFieldListView","Marionette","CollectionView","options","fieldModel","childViewOptions","PodsFieldView","View","this","model","toJSON","get","PodsDFVFieldLayout","FileUploadModel","FileUploadCollection","Collection","FileUploadItem","_","template","FileUploadList","sort_axis","$el","sortable","FileUploadForm","PodsFileUploader","Object","browseButton","uiRegion","call","FileUploadQueueModel","FileUploadQueueItem","FileUploadQueue","Uploaders","plupload","Uploader","init","bind","onFilesAdded","onUploadProgress","onFileUploaded","up","files","collection","view","each","index","file","id","name","add","reset","show","queueCollection","refresh","start","set","progress","percent","resp","response","newFile","json","substr","window","console","log","jQuery","text","match","length","parseJSON","isEmptyObject","PodsI18n","__","ID","thumbnail","post_title","edit_link","link","download","undefined","wp","defaults","filters","mime_types","defaultExt","extensions","mediaObject","media","once","onMediaSelect","open","content","mode","selection","state","newFiles","attachment","sizes","attributes","attachmentThumbnail","icon","url","full","push","title","editLink","FileUpload","listView","formView","showChildView","uploader","createUploader","listenTo","onAddedFiles","childView","remove","invoke","fileLimit","newCollection","filteredModels","clone","models","filter","indexOf","targetUploader","thisUploader","prototype","fileUploader","getRegion","getEl","PodsDFVModal","Modal","retVal","close","apply","escape","parent","IframeFrame","Frame","initialize","arguments","addClass","initState","initModal","on","iframeContent","iframe","createTitle","append","src","states","controller","State","modal","setState","Iframe","RelationshipModel","RelationshipCollection","ids","map","thisModel","selected","contains","filtered","itemModel","PickFieldModel","RadioItem","RadioView","CheckboxItem","CheckboxView","validateSelectionLimit","selectionLimitOver","toggleSelected","selectionLimitUnder","limit","numSelected","pick_limit","filterBySelected","find","prop","SelectItem","val","html","Optgroup","SelectView","item","optgroup","returnOptions","pick_format_type","class","name_clean","view_name","format_type","setupSelect2","multiLastValidSelection","alert","sprintf","_n","setSelected","viewName","formatType","selectedItems","returnList","results","select2Options","self","$select2","ajaxData","ajax_data","select2Overrides","select2_overrides","isSingle","selectedCount","$ulContainer","prepend","limitDisable","label","pick_taggable","ajax","minimum_input_length","ajaxurl","delay","params","_wpnonce","pod","field","uri","term","filterAjaxList","selectWoo","$selected","reverse","option","ListItem","ListView","child","DISABLED_CLASS","AddNew","getUI","removeClass","hasClass","views","modalIFrame","Pick","showAddNew","buildAutocomplete","showList","pickLimit","onChildviewSelectionLimitOver","onChildviewSelectionLimitUnder","filterByUnselected","getChildView","destroy","list","Error","addNew","setCollection","disable","enable","iframe_title_add","iframe_src","setModalListeners","iframe_title_edit","ui","editButton","attr","selectFromExisting","modalSuccess","modalCancel","off","event","clearModalListeners","emptyFunction","module","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","array","isRequired","bool","func","number","object","string","symbol","any","arrayOf","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$0","Text","_this","React","Component","value","target","onValueChanged","fieldClasses","fields","Field","createFactory","PodsDFV","fieldType","newData","parents","pick_allow_add_new","renderer","document","addEventListener"],"mappings":"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"}